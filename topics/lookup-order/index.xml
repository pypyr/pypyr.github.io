<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>lookup order on pypyr</title><link>https://pypyr.io/topics/lookup-order/</link><description>Recent content in lookup order on pypyr</description><generator>Hugo</generator><language>en-us</language><atom:link href="https://pypyr.io/topics/lookup-order/index.xml" rel="self" type="application/rss+xml"/><item><title>pipeline look-up order</title><link>https://pypyr.io/docs/pipelines/lookup-order/</link><pubDate>Thu, 13 Aug 2020 00:00:00 +0000</pubDate><guid>https://pypyr.io/docs/pipelines/lookup-order/</guid><description>pipeline look-up order permalink absolute vs relative paths permalinkYou can pass absolute or relative paths to pypyr.
posix term $ pypyr pipeline-name # relative path: ./pipeline-name.yaml $ pypyr subdir/pipeline-name # relative path: ./subdir/pipeline-name.yaml $ pypyr /subdir/pipeline-name # absolute path: /subdir/pipeline-name.yaml $ pypyr ~/subdir/pipeline-name # absolute path: /Users/username/subdir/pipeline-name.yaml _ windows term $ pypyr pipeline-name # relative path: .\pipeline-name.yaml $ pypyr subdir/pipeline-name # relative path: .\subdir\pipeline-name.yaml $ pypyr c:/subdir/pipeline-name # absolute path: c:\subdir\pipeline-name.</description></item><item><title>pypyr.loaders.file</title><link>https://pypyr.io/docs/loaders/file/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pypyr.io/docs/loaders/file/</guid><description>file loader permalinkThis is pypyr&amp;rsquo;s default loader. It searches for pipelines on local disk based on the pipeline-name and loads the pipeline when it finds it.
The important thing to understand with this loader is how pypyr matches the pipeline name and the look-up order in which it traverses the filesystem to resolve a pipeline name.
The loader&amp;rsquo;s fully qualified name is pypyr.loaders.file. You&amp;rsquo;re very unlikely to have to specify this manually yourself, because if you don&amp;rsquo;t specify any value for loader in the input args of the api pypyr will use this loader by default.</description></item><item><title>pypyr.loaders.string</title><link>https://pypyr.io/docs/loaders/string/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pypyr.io/docs/loaders/string/</guid><description> string loader permalinkUse the string loader to inject a pipeline directly into pypyr without needing to save it to file first.
Specify pypyr.loaders.string for loader, and pass the pipeline body as a string to the pipeline_name argument.
from pypyr import pipelinerunner pipeline = &amp;#34;&amp;#34;&amp;#34;\ steps: - name: pypyr.steps.set in: set: test: 1 &amp;#34;&amp;#34;&amp;#34; context = pipelinerunner.run(pipeline_name=pipeline, loader=&amp;#39;pypyr.loaders.string&amp;#39;) assert context[&amp;#39;test&amp;#39;] == 1 print(context)</description></item></channel></rss>
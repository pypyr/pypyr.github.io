<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>inline code on pypyr</title><link>https://pypyr.io/topics/inline-code/</link><description>Recent content in inline code on pypyr</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Thu, 06 Aug 2020 21:19:16 +0100</lastBuildDate><atom:link href="https://pypyr.io/topics/inline-code/index.xml" rel="self" type="application/rss+xml"/><item><title>pypyr.steps.py</title><link>https://pypyr.io/docs/steps/py/</link><pubDate>Mon, 06 Jul 2020 13:17:22 +0100</pubDate><guid>https://pypyr.io/docs/steps/py/</guid><description>pypyr.steps.py permalink run inline python permalinkExecutes the context value pycode as python code.
Will execute context['pycode'] as a dynamically interpreted python code block.
For example, this will invoke python print and print 2:
steps:- name:pypyr.steps.pycomment:Exampleofarbpythoncode.Willprint2.in:pycode:print(1+1) working with context permalinkYou can access and change the context dictionary in a py step. Changes you make to context will endure after the py step completes.
When you are in a py step, context exists as a dictionary-like object named context.</description></item><item><title>py string - dynamic python expressions</title><link>https://pypyr.io/docs/substitutions/py-strings/</link><pubDate>Sat, 13 Jun 2020 21:38:57 +0100</pubDate><guid>https://pypyr.io/docs/substitutions/py-strings/</guid><description>py strings permalink dynamic python expressions permalinkpy strings allow you to execute python expressions dynamically. This lets you use a python expression wherever you can use a string formatting expression.
A py string looks like this:
!py &amp;lt;&amp;lt;your python expression here&amp;gt;&amp;gt; For example, if context['key'] is &amp;lsquo;abc&amp;rsquo;, the following will return True: !py len(key) == 3&amp;quot;
Notice that you can use the context keys directly as variables. Unlike string formatting expressions, you don&amp;rsquo;t surround the key name with {curlies}.</description></item></channel></rss>
<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>releases on pypyr</title><link>https://pypyr.io/updates/releases/</link><description>Recent content in releases on pypyr</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://pypyr.io/updates/releases/index.xml" rel="self" type="application/rss+xml"/><item><title>pypyr release v5.7.0</title><link>https://pypyr.io/updates/releases/v5.7.0/</link><pubDate>Thu, 20 Oct 2022 15:00:13 +0000</pubDate><guid>https://pypyr.io/updates/releases/v5.7.0/</guid><description>pypyr release v5.7.0 permalink switch &amp;amp; argskwargs permalinkRelease Date: 2022-10-20T15:00:13Z
summary permalink New switch step for IF-ELSE style branching in your pipelines! New argskwargs parser to combine plain args and key-value pairs (key=value) from the cli. keyvaluepairs and dict parsers now support having = in the value, so you can have key=one+one=two parse to {'key': 'one+one=two'} these parsers now also support passing args with no =, in which case arg1 becomes {'arg1': ''} what&amp;rsquo;s changed permalink switch by @yaythomas in https://github.</description></item><item><title>pypyr release v5.6.0</title><link>https://pypyr.io/updates/releases/v5.6.0/</link><pubDate>Wed, 05 Oct 2022 17:43:44 +0000</pubDate><guid>https://pypyr.io/updates/releases/v5.6.0/</guid><description>pypyr release v5.6.0 permalink venv create &amp;amp; new flit build internals permalinkRelease Date: 2022-10-05T17:43:44Z
summary permalink Use a custom error message when pypyr.steps.assert raises an exception. new pypyr.steps.venv step to create venvs in parallel from yaml or toml config. new venv-create built-in pipeline so you can provision venvs concurrently from declarative config without having to write your own pipeline or script. pypyr is now built &amp;amp; packaged by the excellent PEP517 compliant flit.</description></item><item><title>pypyr release v5.5.0</title><link>https://pypyr.io/updates/releases/v5.5.0/</link><pubDate>Thu, 26 May 2022 13:18:48 +0000</pubDate><guid>https://pypyr.io/updates/releases/v5.5.0/</guid><description>pypyr release v5.5.0 permalink concurrent cmds &amp;amp; cmdOut dot notation permalinkRelease Date: 2022-05-26T13:18:48Z
Introduce pypyr.steps.cmds &amp;amp; pypyr.steps.shells to run programs or shell statements asynchronously as parallel (concurrent) sub-processes. This means all the parallel commands start at the same time and run concurrently, rather than run serially one after the other. - name: pypyr.steps.cmds comment: copy 3 files concurrently in: cmds: - cp file1.ext /media/vol1/ - cp file2.ext /media/vol2/file2-archive.ext - cp file3.</description></item><item><title>pypyr release v5.4.0</title><link>https://pypyr.io/updates/releases/v5.4.0/</link><pubDate>Thu, 14 Apr 2022 17:44:08 +0000</pubDate><guid>https://pypyr.io/updates/releases/v5.4.0/</guid><description>pypyr release v5.4.0 permalink run multiple commands &amp;amp; shell statements in same step permalinkRelease Date: 2022-04-14T17:44:08Z
summary permalink pypyr.steps.cmd &amp;amp; pypyr.steps.shell now also takes a list input to run multiple commands/shell statements in the same step! - name: pypyr.steps.cmd in: cmd: echo 0 - name: pypyr.steps.cmd in: cmd: - echo 1 - echo 2 - name: pypyr.steps.cmd in: cmd: run: - echo 3 - echo 4 save: False cwd: mydir/subdir Both the cmd and shell steps expanded to allow: decode output in different encodings save output as raw bytes or as encoded text.</description></item><item><title>pypyr release v5.3.0</title><link>https://pypyr.io/updates/releases/v5.3.0/</link><pubDate>Wed, 09 Mar 2022 16:38:06 +0000</pubDate><guid>https://pypyr.io/updates/releases/v5.3.0/</guid><description>pypyr release v5.3.0 permalink shortcuts permalinkRelease Date: 2022-03-09T16:38:06Z
Create shortcuts to your pypyr run commands &amp;amp; their input args.
This is handy for creating short &amp;amp; sweet aliases for longer pipeline run commands.
So if you have a pipeline you normally run like this: term $ pypyr arb/my-pipeline arg1=1234 arg2=&amp;#34;/path/to long/annoying path to type/x&amp;#34; arg3=&amp;#34;arb&amp;#39;hello&amp;#34; You can create a shortcut alias for this like so: config.yaml shortcuts: my-shortcut: pipeline: arb/my-pipeline args: arg1: 1234 arg2: /path/to long/annoying path to type/x arg3: &amp;#34;arb&amp;#39;hello&amp;#34; pyproject.</description></item><item><title>pypyr release v5.2.0</title><link>https://pypyr.io/updates/releases/v5.2.0/</link><pubDate>Sat, 19 Feb 2022 18:41:22 +0000</pubDate><guid>https://pypyr.io/updates/releases/v5.2.0/</guid><description>pypyr release v5.2.0 permalink encoding &amp;amp; config permalinkRelease Date: 2022-02-19T18:41:22Z
pypyr is now configurable with yaml or pyproject.toml! See pypyr config for details. You can now use variables from a config file like pyproject.toml in your pipeline with pypyr.steps.configvars. You can now explicitly over-ride the default system encoding on any filesystem operations. On the steps with in and out files, you can seamlessly convert between different encodings - so you can have an input file in one encoding, and the output file in another.</description></item><item><title>pypyr release v5.1.0</title><link>https://pypyr.io/updates/releases/v5.1.0/</link><pubDate>Sun, 12 Dec 2021 19:57:55 +0000</pubDate><guid>https://pypyr.io/updates/releases/v5.1.0/</guid><description>pypyr release v5.1.0 permalink toml &amp;amp; text+binary file read/write permalinkRelease Date: 2021-12-12T19:57:55Z
Finally, toml, has come, to pypyr! 🎆
pypyr.parser.tomlfile to initialize pipeline context with a toml file pypyr.steps.fetchtoml to read toml file into context as an object with typing pypyr.steps.filewritetoml to write specified context to output toml file - lets you create toml files on-the-fly programmatically. pypyr.steps.fileformattoml to read input toml file(s) specified by path, glob or list of paths, replace {formatting expressions} and write to output file(s).</description></item><item><title>pypyr release v5.0.0</title><link>https://pypyr.io/updates/releases/v5.0.0/</link><pubDate>Sat, 20 Nov 2021 13:17:39 +0000</pubDate><guid>https://pypyr.io/updates/releases/v5.0.0/</guid><description>pypyr release v5.0.0 permalinkRelease Date: 2021-11-20T13:17:39Z
Implement adr2 relative pipelines + api changes.
In brief, this release lets pipelines reference custom modules &amp;amp; child pipelines relative to the pipeline itself, rather than the current directory. This lets you create portable, re-usable &amp;amp; composable pipeline libraries.
breaking changes permalinkThis is a major version increment because it comes with BREAKING CHANGES:
API: pipelinerunner.run() replaces both pipelinerunner.main() and pipelinerunner.main_with_context() API: def get_pipeline_definition(pipeline_name, working_directory) signature for custom pype loaders changes to def get_pipeline_definition(pipeline_name, parent) CLI: the —dir flag now only sets the directory for ad hoc custom Python modules, it does NOT also set the directory for pipelines anymore Final removal of deprecated get_formatted_iterable, get_formatted_string #195 &amp;amp; pypyr.</description></item><item><title>pypyr release v4.6.0</title><link>https://pypyr.io/updates/releases/v4.6.0/</link><pubDate>Wed, 06 Oct 2021 11:20:21 +0000</pubDate><guid>https://pypyr.io/updates/releases/v4.6.0/</guid><description>pypyr release v4.6.0 permalink set, add, append. permalinkRelease Date: 2021-10-06T11:20:21Z
contextsetf now has a simpler, shorter alias set. The old, longer form contextsetf will keep on working, so you don&amp;rsquo;t HAVE to change your pipelines. But hopefully the new shorter set syntax saves you some typing in the future! Create lists &amp;amp; append items to it with pypyr.steps.append Create sets &amp;amp; add items to it with pypyr.steps.add Since Python 3.</description></item><item><title>pypyr release v4.5.0</title><link>https://pypyr.io/updates/releases/v4.5.0/</link><pubDate>Tue, 02 Feb 2021 11:18:53 +0000</pubDate><guid>https://pypyr.io/updates/releases/v4.5.0/</guid><description>pypyr release v4.5.0 permalink retry backoff &amp;amp; cleaner api init permalinkRelease Date: 2021-02-02T11:18:53Z
Add retry backoff strategies. You can now use retry backoff algorithms like exponential or linear to control the sleep interval in between retries. The default fixed retry sleep interval now supports a list input, so the next sleep interval between retries can come from a list you provide yourself. Ref #216. For API consumers: Prevent duplicates in sys.</description></item><item><title>pypyr release v4.4.1</title><link>https://pypyr.io/updates/releases/v4.4.1/</link><pubDate>Fri, 01 Jan 2021 14:54:19 +0000</pubDate><guid>https://pypyr.io/updates/releases/v4.4.1/</guid><description>pypyr release v4.4.1 permalink context parser initialize to empty rather than None permalinkRelease Date: 2021-01-01T14:54:19Z
Context parsers that create an entry in context now initialize to empty rather than None. This means you can directly use something like {argList}, {argDict} and argString (initializing respectively to [], {}, '') directly for things like foreach loops without having to worry about None checks. Your existing truthy checks for these values will work as before.</description></item><item><title>pypyr release v4.4.0</title><link>https://pypyr.io/updates/releases/v4.4.0/</link><pubDate>Sat, 26 Dec 2020 15:50:27 +0000</pubDate><guid>https://pypyr.io/updates/releases/v4.4.0/</guid><description>pypyr release v4.4.0 permalink simplified py step syntax &amp;amp; imports for !py strings. permalinkRelease Date: 2020-12-26T15:50:27Z
New step pypyr.steps.pyimport to import references to the !py string namespace. This includes an underlying api signature change by removal of pypyr.utils.expressions.eval_string(), but this is sufficiently far down the call-chain that it shouldn’t affect any normal pipeline operator or api consumer. pypyr.steps.contextclearall wipes pyimport imported references in addition to the key/values inside context. Simplify pypyr.</description></item><item><title>pypyr release v4.3.0</title><link>https://pypyr.io/updates/releases/v4.3.0/</link><pubDate>Thu, 12 Nov 2020 20:36:36 +0000</pubDate><guid>https://pypyr.io/updates/releases/v4.3.0/</guid><description>pypyr release v4.3.0 permalink streamlined api main() entry-point permalinkRelease Date: 2020-11-12T20:36:36Z
This one is for all the API consumers! The new API entry-point is likely to be useful to anyone who wants to pass regular Python objects directly to pypyr, rather than have to mediate through a string-based cli-orientated context_parser first.
Streamline main entrypoint API. close #201. main() allows consumer to set pype loader, rather than having to drop further down into api to load_and_run_pipeline() new main_with_context() allows you to use a standard Python dict to initialize context and bypass the pipeline&amp;rsquo;s context_parser entirely.</description></item><item><title>pypyr release v4.2.0</title><link>https://pypyr.io/updates/releases/v4.2.0/</link><pubDate>Fri, 30 Oct 2020 00:27:59 +0000</pubDate><guid>https://pypyr.io/updates/releases/v4.2.0/</guid><description>pypyr release v4.2.0 permalink flat &amp;amp; recursive format, !jsonify, parsejson permalinkRelease Date: 2020-10-30T00:27:59Z
python 3.9 compatibility officially confirmed &amp;amp; enforced in CI. All good. Woo! 🎉 New Flat ff and Recursive rf formatting specifiers. #195 Check recursive vs flat format expressions for full documentation. Maintain backwards compatibility for all current formatting functionality. The get_formatted_string, get_formatted_iterable &amp;amp; get_processed_string methods on Context() are now all deprecated. Use get_formatted_value instead. All of the deprecated functions will keep on working as before, but will print a WARN to the output.</description></item><item><title>release v4.1.0</title><link>https://pypyr.io/updates/releases/v4.1.0/</link><pubDate>Sun, 30 Aug 2020 19:04:37 +0000</pubDate><guid>https://pypyr.io/updates/releases/v4.1.0/</guid><description>pypyr release v4.1.0 permalink step description (skipping) when skipping. permalinkRelease Date: 2020-08-30T19:04:37Z
Better description output - add (skipping) to output if the step is not running because run is False or skip is True. Ref #158. First release published from shiny new GitHub Action CI/CD! Add License to wheel published to pypi You can find pypyr release v4.1.0 on github, where you can click through to associated Issues, Pull Requests and Users.</description></item><item><title>release v4.0.0</title><link>https://pypyr.io/updates/releases/v4.0.0/</link><pubDate>Mon, 17 Aug 2020 19:27:51 +0000</pubDate><guid>https://pypyr.io/updates/releases/v4.0.0/</guid><description>pypyr release v4.0.0 permalink Stop in failure handlers. in context cleanup default. permalinkRelease Date: 2020-08-17T19:27:51Z
BREAKING CHANGE: final deprecation of in args scope persisting after step execution. For full discussion please see #177. Preview functionality where setting environment variable $PYPYR_IN_CLEAN = 1 is now the default. You can remove the $PYPYR_IN_CLEAN variable from this release onwards. Henceforth pypyr removes in args from context after step completes. If you want to persist values in context beyond the current step, use pypyr.</description></item><item><title>release v3.2.2</title><link>https://pypyr.io/updates/releases/v3.2.2/</link><pubDate>Thu, 13 Aug 2020 19:34:08 +0000</pubDate><guid>https://pypyr.io/updates/releases/v3.2.2/</guid><description>pypyr release v3.2.2 permalink line + col no., repo rename, readme updates. permalinkRelease Date: 2020-08-13T19:34:08Z
Line + Column Number count from 1 not 0. fix #151 update README to point at new website pypyr.io. update CONTRIBUTING to point at new website. update documentation and pypi setup with new repo name. You can find pypyr release v3.2.2 on github, where you can click through to associated Issues, Pull Requests and Users.</description></item><item><title>release v3.2.1</title><link>https://pypyr.io/updates/releases/v3.2.1/</link><pubDate>Tue, 14 Apr 2020 02:20:27 +0000</pubDate><guid>https://pypyr.io/updates/releases/v3.2.1/</guid><description>pypyr release v3.2.1 permalink Support non-string keys in context on Formatting &amp;amp; Merge permalinkRelease Date: 2020-04-14T02:20:27Z
Allow non-string keys on context.get_formatted_iterable and context merge (including the step pypyr.steps.contextmerge). Resolves #179. Much thanks to @Reskov for a detailed &amp;amp; helpful bug report! You can find pypyr release v3.2.1 on github, where you can click through to associated Issues, Pull Requests and Users.
Released by yaythomas.</description></item><item><title>release v3.2.0</title><link>https://pypyr.io/updates/releases/v3.2.0/</link><pubDate>Sat, 04 Apr 2020 13:33:40 +0000</pubDate><guid>https://pypyr.io/updates/releases/v3.2.0/</guid><description>pypyr release v3.2.0 permalink nested call inside loops &amp;amp; in context clearing preview permalinkRelease Date: 2020-04-04T13:33:40Z
ATTENTION: Please start preparing all your pipelines to be ready for the next major release where in context arguments will be removed from context on step completion. This shouldn&amp;rsquo;t be too much of an issue. For any steps where you need to set enduring context, use contextsetf or contextset.
Allow using a call control-of-flow instruction nested inside while/for/retry loops.</description></item><item><title>release v3.1.0</title><link>https://pypyr.io/updates/releases/v3.1.0/</link><pubDate>Tue, 11 Feb 2020 19:24:11 +0000</pubDate><guid>https://pypyr.io/updates/releases/v3.1.0/</guid><description>pypyr release v3.1.0 permalink API change to main entrypoint for logging permalinkRelease Date: 2020-02-11T19:24:11Z
pypyr.log.logger.set_root_logger(log_level, log_path) call moved from pipelinerunner.main() to cli.main()
this has the side-effect that pipelinerunner.main() signature has changed, with log_level and log_path removed. API consumers should update.
Reason being API consumers should set their own log handlers, since handler configuration should be the prerogative of the calling application, not the invoked library.
Re #172, #173
You can find pypyr release v3.</description></item><item><title>release v3.0.3</title><link>https://pypyr.io/updates/releases/v3.0.3/</link><pubDate>Wed, 29 Jan 2020 01:03:12 +0000</pubDate><guid>https://pypyr.io/updates/releases/v3.0.3/</guid><description>pypyr release v3.0.3 permalink Retry Decorator handles original errors when calling Groups permalinkRelease Date: 2020-01-29T01:03:12Z
Retry Decorator correctly handles errors raised from .call or .jump steps when checking error type with retryOn and stopOn. Close #170 - thanks to @Reskov for reporting! add tarball to PyPI deploy artefacts. You can find pypyr release v3.0.3 on github, where you can click through to associated Issues, Pull Requests and Users.
Released by yaythomas.</description></item><item><title>release v3.0.2</title><link>https://pypyr.io/updates/releases/v3.0.2/</link><pubDate>Mon, 18 Nov 2019 19:30:27 +0000</pubDate><guid>https://pypyr.io/updates/releases/v3.0.2/</guid><description>pypyr release v3.0.2 permalink Better error messages on failing import modules permalinkRelease Date: 2019-11-18T19:30:27Z
When importing a step that does exist (mystep.blah), a failing import mymodule.blah inside mystep.blah would give a misleading error and hide the actual source of the problem. Fixes #166. Eternal thanks to @irancati for raising the issue! You can find pypyr release v3.0.2 on github, where you can click through to associated Issues, Pull Requests and Users.</description></item><item><title>release v3.0.1</title><link>https://pypyr.io/updates/releases/v3.0.1/</link><pubDate>Fri, 13 Sep 2019 20:11:13 +0000</pubDate><guid>https://pypyr.io/updates/releases/v3.0.1/</guid><description>pypyr release v3.0.1 permalink pypyr.steps.debug &amp;amp; context merge support all types permalinkRelease Date: 2019-09-13T20:11:13Z
With a million thank yous 🙏 to @Reskov for these much needed fixes/enhancements! 🎆
Resolves issue #149. pypyr.steps.debug now supports outputting any type, including PyString &amp;amp; SicString Resolve pypyr.steps.contextmerge issue to support merging any type, including PyString &amp;amp; SicString. You can find pypyr release v3.0.1 on github, where you can click through to associated Issues, Pull Requests and Users.</description></item><item><title>release v3.0.0</title><link>https://pypyr.io/updates/releases/v3.0.0/</link><pubDate>Thu, 22 Aug 2019 17:47:35 +0000</pubDate><guid>https://pypyr.io/updates/releases/v3.0.0/</guid><description>pypyr release v3.0.0 permalink Major version, with BREAKING CHANGES: features custom step groups, caching &amp;amp; no more ./pipelines dir permalinkRelease Date: 2019-08-22T17:47:35Z
BREAKING CHANGE: Remove deprecated step input context for (ref #118) assert env fetchjson fetchyaml fileformat fileformatjson fileformatyaml filereplace tar BREAKING CHANGE: cli context input now uses standard cli spacing rather than needing to str close everything. Closes #94 So where you had: pypyr mypipeline &amp;quot;key1=value1,key2=value2” Now instead: pypyr mypipeline key1=value1 key2=value2 BREAKING CHANGE: Big API changes to pipelinerunner, stepsrunner and Step BREAKING CHANGE: pypyr.</description></item><item><title>release v2.11.0</title><link>https://pypyr.io/updates/releases/v2.11.0/</link><pubDate>Tue, 06 Aug 2019 21:16:03 +0000</pubDate><guid>https://pypyr.io/updates/releases/v2.11.0/</guid><description>pypyr release v2.11.0 permalink less confusing logging with NOTIFY permalinkRelease Date: 2019-08-06T21:16:03Z
This one is all @Reskov 🎉 eternal gratitude!
new NOTIFY logging level added. this level is much less verbose than even INFO, and only displays explicits echos that you specify in your pipeline, and also the description from the step decorator. This should make it much easier to see what your pipeline is doing without the extra detail that can make things confusing and harder to follow.</description></item><item><title>release v2.10.0</title><link>https://pypyr.io/updates/releases/v2.10.0/</link><pubDate>Wed, 10 Jul 2019 08:48:32 +0000</pubDate><guid>https://pypyr.io/updates/releases/v2.10.0/</guid><description>pypyr release v2.10.0 permalink Better Errors - line numbers, save errors permalinkRelease Date: 2019-07-10T08:48:32Z
With eternal thanks to @Reskov 🎉 for next level super useful improved error handling! 🙇
#139 - pypyr now saves all run-time errors to context under runErrors. This means subsequent steps can use error information from previous steps. #135 - error information now include the pipeline source yaml line+col numbers You can find pypyr release v2.</description></item><item><title>release v2.9.0</title><link>https://pypyr.io/updates/releases/v2.9.0/</link><pubDate>Fri, 14 Jun 2019 18:51:28 +0000</pubDate><guid>https://pypyr.io/updates/releases/v2.9.0/</guid><description>pypyr release v2.9.0 permalink glob step and special tag merge permalinkRelease Date: 2019-06-14T18:51:28Z
pypyr.steps.glob lets you get a list of paths from a glob, and combine different globs into a combined output result list. Issue #145 with much thanks to @Reskov 🎉 , resolves issue #143 - merge step now supports special tag directives You can find pypyr release v2.9.0 on github, where you can click through to associated Issues, Pull Requests and Users.</description></item><item><title>release v2.8.0</title><link>https://pypyr.io/updates/releases/v2.8.0/</link><pubDate>Sun, 24 Mar 2019 01:22:01 +0000</pubDate><guid>https://pypyr.io/updates/releases/v2.8.0/</guid><description>pypyr release v2.8.0 permalink Retry Decorator and until-style While Loops permalinkRelease Date: 2019-03-24T01:22:01Z
new Retry decorator allows steps to retry automatically when step encounters an error. ref #130 fix run_step AttributeError might have caught or hidden AttributeErrors in the step code itself, rather than just when the step module didn&amp;rsquo;t contain a run_step function. ref #129 while loop checks stop condition only at end of each iteration. previously if a stop condition evaluated True even before the loop started the loop wouldn&amp;rsquo;t run at all.</description></item><item><title>release v2.7.0</title><link>https://pypyr.io/updates/releases/v2.7.0/</link><pubDate>Thu, 21 Mar 2019 15:09:21 +0000</pubDate><guid>https://pypyr.io/updates/releases/v2.7.0/</guid><description>pypyr release v2.7.0 permalink pypyr.steps.pype inputs now support string interpolation permalinkRelease Date: 2019-03-21T15:09:21Z
add string interpolation to pypyr.steps.pype input. You can find pypyr release v2.7.0 on github, where you can click through to associated Issues, Pull Requests and Users.
Released by yaythomas.</description></item><item><title>release v2.6.0</title><link>https://pypyr.io/updates/releases/v2.6.0/</link><pubDate>Fri, 08 Feb 2019 16:20:23 +0000</pubDate><guid>https://pypyr.io/updates/releases/v2.6.0/</guid><description>pypyr release v2.6.0 permalink pypyr.steps.now and pypyr.steps.nowutc permalinkRelease Date: 2019-02-08T16:20:23Z
get the current datetime stamp into the pypyr context as a formattable string, where you can specify your own datetime formats using the standard python date time replacement tokens like %Y-%m-%d for YYYY-MM-DD. You can find pypyr release v2.6.0 on github, where you can click through to associated Issues, Pull Requests and Users.
Released by yaythomas.</description></item><item><title>release v2.5.0</title><link>https://pypyr.io/updates/releases/v2.5.0/</link><pubDate>Wed, 30 Jan 2019 19:08:54 +0000</pubDate><guid>https://pypyr.io/updates/releases/v2.5.0/</guid><description>pypyr release v2.5.0 permalink change the current working directory for cmd and shell permalinkRelease Date: 2019-01-30T19:08:54Z
use the new cwd input on pypyr.steps.cmd and pypyr.steps.shell to set the current working directory for the program/shell that you want to execute. Supports relative paths.
You can find pypyr release v2.5.0 on github, where you can click through to associated Issues, Pull Requests and Users.
Released by yaythomas.</description></item><item><title>release v2.4.0</title><link>https://pypyr.io/updates/releases/v2.4.0/</link><pubDate>Thu, 24 Jan 2019 23:04:20 +0000</pubDate><guid>https://pypyr.io/updates/releases/v2.4.0/</guid><description>pypyr release v2.4.0 permalink pypyr.steps.pathcheck &amp;amp; deprecation of old style fetchjson/fetchyaml args permalinkRelease Date: 2019-01-24T23:04:20Z
The new pypyr.steps.pathcheck step allows you see if a path exists on the filesystem. It supports literal paths and glob expansions. It writes handy values into pathCheckOutwith bool for existence and count of files found for the given path. #114 deprecate old style multi context inputs for fetchjson and fetchyaml, #118. this is not just arbitrary: reason is when step is used multiple times in same pipeline, it becomes easy to have left-over values from previous step run left in context that then cause surprising behaviour with the downstream step.</description></item><item><title>release v2.3.0</title><link>https://pypyr.io/updates/releases/v2.3.0/</link><pubDate>Thu, 24 Jan 2019 02:18:47 +0000</pubDate><guid>https://pypyr.io/updates/releases/v2.3.0/</guid><description>pypyr release v2.3.0 permalink pypyr.steps.getenv permalinkRelease Date: 2019-01-24T02:18:47Z
add new step pypyr.steps.getenv Whereas pypyr.steps.env raises an error if you are getting an environment variable that doesn&amp;rsquo;t exist, the new envget allows you to specify a default value to use instead. ref #111 some documentation updates to demonstrate how to use py strings for ternary assignments built-in pypes use comment rather than description where output is not meant for operator consumption ref #109 alias the --loglevel switch with --log, so you can now do pypyr mypipe --log 10 think of the savings just on keyboard wear and tear!</description></item><item><title>release v2.2.0</title><link>https://pypyr.io/updates/releases/v2.2.0/</link><pubDate>Fri, 18 Jan 2019 10:34:45 +0000</pubDate><guid>https://pypyr.io/updates/releases/v2.2.0/</guid><description>pypyr release v2.2.0 permalink Dynamic pype loading and KeyNotInContextError == KeyError permalinkRelease Date: 2019-01-18T10:34:45Z
This release is all @Reskov! 🎉 Much thanks for your excellent contributions to some tricky bits of the pypyr core!
Context KeyNotInContextError now also derives from KeyError. This makes it easier to catch missing key exceptions in scenarios where Context keys contain other dicts. Allow dynamic loading of pipeline loaders. This allows core extensibility to load pipelines differently and from other places than the default file loader.</description></item><item><title>release v2.1.1</title><link>https://pypyr.io/updates/releases/v2.1.1/</link><pubDate>Fri, 04 Jan 2019 11:32:19 +0000</pubDate><guid>https://pypyr.io/updates/releases/v2.1.1/</guid><description>pypyr release v2.1.1 permalink Write step description to logger INFO on step execution permalinkRelease Date: 2019-01-04T11:32:19Z
write step description to INFO output on step execution, if it exists. this should help with debugging. minor bug fix: legacy support for envs, recreate env key on legacy key found You can find pypyr release v2.1.1 on github, where you can click through to associated Issues, Pull Requests and Users.
Released by yaythomas.</description></item><item><title>release v2.1.0</title><link>https://pypyr.io/updates/releases/v2.1.0/</link><pubDate>Thu, 03 Jan 2019 00:55:09 +0000</pubDate><guid>https://pypyr.io/updates/releases/v2.1.0/</guid><description>pypyr release v2.1.0 permalink globs, save cmd out, backwards compatible context change for multi-key steps permalinkRelease Date: 2019-01-03T00:55:09Z
ATTENTION, FUTURE WARNING: all built-in steps that used to take multiple input keys now instead take a dict input. This makes life significantly easier if you re-run the step in the same pipeline in that you don&amp;rsquo;t have to clear down context before the subsequent step runs anymore. The old-style is now deprecated - for the moment pypyr will make the old-style work seamlessly for you by creating the new keys under the hood for you and raising a warning without stopping, but be aware legacy support will be removed on the next major release.</description></item><item><title>release v2.0.0</title><link>https://pypyr.io/updates/releases/v2.0.0/</link><pubDate>Sun, 16 Dec 2018 20:19:49 +0000</pubDate><guid>https://pypyr.io/updates/releases/v2.0.0/</guid><description>pypyr release v2.0.0 permalink Sic Strings, Py Strings, Fetch into Key and file write yaml/json permalinkRelease Date: 2018-12-16T20:19:49Z
pypyr v2.0.0 release! BREAKING CHANGES: [sic] strings are now a lot better. Instead of relying on string-parsing on &amp;ldquo;[sic]&amp;rdquo; and the tricky use of quotes and double-quotes, now a structural yam tag identifies sic string, making it a whole lot simpler to write sic strings with special characters in them without escape sequences or having to deal with {blah} style eye-bleeding messes.</description></item><item><title>release v1.2.1</title><link>https://pypyr.io/updates/releases/v1.2.1/</link><pubDate>Mon, 05 Nov 2018 11:07:17 +0000</pubDate><guid>https://pypyr.io/updates/releases/v1.2.1/</guid><description>pypyr release v1.2.1 permalink no functional change: fix pype bug permalinkRelease Date: 2018-11-05T11:07:17Z
regression problem with pypyr.steps.pype from previous release fixed no functional change You can find pypyr release v1.2.1 on github, where you can click through to associated Issues, Pull Requests and Users.
Released by yaythomas.</description></item><item><title>release v1.2.0</title><link>https://pypyr.io/updates/releases/v1.2.0/</link><pubDate>Mon, 05 Nov 2018 09:26:15 +0000</pubDate><guid>https://pypyr.io/updates/releases/v1.2.0/</guid><description>pypyr release v1.2.0 permalink no functional change: api update permalinkRelease Date: 2018-11-05T09:26:15Z
improve API call-ability of pypyr by splitting the pipeline loading from running, allowing consumer to manage pipeline cache themselves. With great thanks for the excellent idea and implementation by @Reskov! no functional change introduced with this version You can find pypyr release v1.2.0 on github, where you can click through to associated Issues, Pull Requests and Users.</description></item><item><title>release v1.1.1</title><link>https://pypyr.io/updates/releases/v1.1.1/</link><pubDate>Thu, 18 Oct 2018 22:43:18 +0000</pubDate><guid>https://pypyr.io/updates/releases/v1.1.1/</guid><description>pypyr release v1.1.1 permalink no functional change permalinkRelease Date: 2018-10-18T22:43:18Z
no functional change, only devops deployment update supersedes the v1.1.0 release. note that v1.1.0 is not on pypi because of a deployment issue that 1.1.1 rectifies. You can find pypyr release v1.1.1 on github, where you can click through to associated Issues, Pull Requests and Users.
Released by yaythomas.</description></item><item><title>release v1.1.0</title><link>https://pypyr.io/updates/releases/v1.1.0/</link><pubDate>Thu, 18 Oct 2018 22:01:10 +0000</pubDate><guid>https://pypyr.io/updates/releases/v1.1.0/</guid><description>pypyr release v1.1.0 permalink cli: &amp;ndash;logpath + py 3.7 permalinkRelease Date: 2018-10-18T22:01:10Z
cli option to log to a file path in addition to the console using --logpath. With great thanks to @rickardcronholm! slight BREAKING CHANGE for --loglevel: The previous shortening to pypyr mypipe --log 10 won&amp;rsquo;t work anymore. Use pypyr mypipe --logl 10 if you don&amp;rsquo;t want to type out --loglevel python 3.7 compatibility README help with shell examples You can find pypyr release v1.</description></item><item><title>release v1.0.0</title><link>https://pypyr.io/updates/releases/v1.0.0/</link><pubDate>Thu, 26 Jul 2018 20:17:17 +0000</pubDate><guid>https://pypyr.io/updates/releases/v1.0.0/</guid><description>pypyr release v1.0.0 permalink step decorator: while permalinkRelease Date: 2018-07-26T20:17:17Z
while loop decorator README help with examples for all decorators You can find pypyr release v1.0.0 on github, where you can click through to associated Issues, Pull Requests and Users.
Released by yaythomas.</description></item></channel></rss>
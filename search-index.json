[{"objectID":"https://pypyr.io/docs/getting-started/","relLink":"/docs/getting-started/","linkTitle":"getting started","title":"getting started","description":"Quick start to help if you're new to the pypyr task-runner.","seoTitle":"Quick start help guide to the pypyr pipeline task-runner.","seoDescription":"Get started quickly with writing \u0026 running your own pipelines with pypyr to sequence your own tasks.","keywords":null,"topics":null,"categories":null,"date":"2020-08-12T00:00:00Z"},{"objectID":"https://pypyr.io/docs/api/custom-module-search-path/","relLink":"/docs/api/custom-module-search-path/","linkTitle":"custom module name resolution","title":"custom module name resolution","description":"How to reference custom modules in your pipelines.","seoTitle":"How to import custom Python modules in your automation pipeline.","seoDescription":"You can use ad hoc custom Python modules (.py files) without doing pip install first.","keywords":null,"topics":["custom code"],"categories":null,"date":"2021-11-15T00:00:00Z"},{"objectID":"https://pypyr.io/docs/getting-started/installation/","relLink":"/docs/getting-started/installation/","linkTitle":"install pypyr","title":"install pypyr","description":"How to install pypyr with pip \u0026 how to run pypyr via docker","seoTitle":"How to install the pypyr pipeline task-runner.","seoDescription":"pypyr installs quickly \u0026 easily via pip. Or, the ready-made docker container is a drop-in replacement for the cli.","keywords":null,"topics":null,"categories":["install"],"date":"2020-08-12T00:00:00Z"},{"objectID":"https://pypyr.io/docs/getting-started/run-your-first-pipeline/","relLink":"/docs/getting-started/run-your-first-pipeline/","linkTitle":"run your first pipeline","title":"run your first pipeline","description":"How to run your first pypyr pipeline","seoTitle":"Tutorial showing you how to run your first task-runner pipeline.","seoDescription":"An introduction to how to write \u0026 run your first pipeline with the pypyr task-runner to automate your own tasks.","keywords":null,"topics":null,"categories":null,"date":"2020-08-12T00:00:00Z"},{"objectID":"https://pypyr.io/docs/getting-started/basic-concepts/","relLink":"/docs/getting-started/basic-concepts/","linkTitle":"basic concepts","title":"basic concepts","description":"Basic concepts of pypyr. Learn the fundamentals of how pipelines, step-groups, steps \u0026 context fit together.","seoTitle":"Task-runner pipelines, steps, step-groups \u0026 context.","seoDescription":"Automation by defining sequences of steps \u0026 modular step groups in a pipeline. Use context to pass values between steps.","keywords":null,"topics":null,"categories":null,"date":"2020-08-12T00:00:00Z"},{"objectID":"https://pypyr.io/docs/getting-started/variables/","relLink":"/docs/getting-started/variables/","linkTitle":"variables","title":"variables","description":"How to use variables \u0026 arguments in a pipeline.","seoTitle":"How to use variables in a task-runner pipeline.","seoDescription":"Use local \u0026 global variables in a pypyr pipeline to parameterize your pipelines.","keywords":null,"topics":["context"],"categories":null,"date":"2021-09-06T00:00:00Z"},{"objectID":"https://pypyr.io/docs/getting-started/conditional-logic/","relLink":"/docs/getting-started/conditional-logic/","linkTitle":"conditional logic","title":"conditional logic","description":"How to run or skip steps conditionally.","seoTitle":"How to use conditional logic in a task-runner pipeline.","seoDescription":"You can run or skip steps in a pypyr pipeline based on parameterized conditional branching statements.","keywords":null,"topics":["control-of-flow"],"categories":null,"date":"2021-09-08T00:00:00Z"},{"objectID":"https://pypyr.io/docs/getting-started/loops/","relLink":"/docs/getting-started/loops/","linkTitle":"loops","title":"loops","description":"How to loop or iterate over a step.","seoTitle":"How to use loops (iterations) in a task-runner pipeline.","seoDescription":"You can repeatedly run a step by looping in a pypyr pipeline without writing code.","keywords":null,"topics":["loops","control-of-flow"],"categories":null,"date":"2021-09-09T00:00:00Z"},{"objectID":"https://pypyr.io/docs/getting-started/error-handling/","relLink":"/docs/getting-started/error-handling/","linkTitle":"error handling","title":"error handling","description":"How to handle errors in your pipelines.","seoTitle":"Overview of error handling in a task-runner pipeline.","seoDescription":"Retry, swallow or ignore errors in a pipeline. Add extra diagnostic info to exceptions.","keywords":null,"topics":["error handling"],"categories":null,"date":"2020-08-12T00:00:00Z"},{"objectID":"https://pypyr.io/docs/getting-started/config/","relLink":"/docs/getting-started/config/","linkTitle":"config","title":"config","description":"Configure pypyr run-time settings with environment variables \u0026 config files.","seoTitle":"How to configure pypyr","seoDescription":"Configure pypyr task-runner run-time settings \u0026 defaults with pyproject.toml or the yaml config file.","keywords":null,"topics":null,"categories":null,"date":"2021-02-14T00:00:00Z"},{"objectID":"https://pypyr.io/docs/pipelines/pipeline-structure/","relLink":"/docs/pipelines/pipeline-structure/","linkTitle":"pipeline structure","title":"pipeline yaml structure","description":"The format \u0026 structure of a pipeline.","seoTitle":"Directory lookup order for task-runner pipelines on the filesystem.","seoDescription":"Search for a matching pipeline first in the working directory \u0026 alternate location lookup sequence.","keywords":null,"topics":["pipeline format"],"categories":null,"date":"2020-08-12T00:00:00Z"},{"objectID":"https://pypyr.io/docs/pipelines/lookup-order/","relLink":"/docs/pipelines/lookup-order/","linkTitle":"lookup order","title":"pipeline look-up order","description":"pypyr looks for pipeline files \u0026 custom code modules on the filesystem in these directories.","seoTitle":"Directory lookup order for task-runner pipelines on the filesystem.","seoDescription":"Use absolute or relative paths to find a matching pipeline in the file location lookup sequence.","keywords":null,"topics":["lookup-order"],"categories":["pipelines"],"date":"2020-08-12T00:00:00Z"},{"objectID":"https://pypyr.io/docs/pipelines/composability/","relLink":"/docs/pipelines/composability/","linkTitle":"composability","title":"composability","description":"Encapsulate pipeline functionality in re-usable components.","seoTitle":"Create composable automation pipelines with re-usable components.","seoDescription":"Encapsulate your workflow automation tasks in re-usable modular components with pypyr task-runner.","keywords":null,"topics":null,"categories":["pipelines"],"date":"2022-10-07T00:00:00Z"},{"objectID":"https://pypyr.io/docs/cli/run-a-pipeline/","relLink":"/docs/cli/run-a-pipeline/","linkTitle":"run a pipeline with the pypyr cli","title":"run a pipeline with the pypyr cli","description":"How to run a pypyr pipeline yaml from the cli","seoTitle":"How to run a task-runner automation pipeline from the cli.","seoDescription":"Run your yaml automation pipelines easily with the simple pypyr cli.","keywords":null,"topics":null,"categories":["pipelines"],"date":"2020-08-12T00:00:00Z"},{"objectID":"https://pypyr.io/docs/loaders/file/","relLink":"/docs/loaders/file/","linkTitle":"file","title":"pypyr.loaders.file","description":"The default file loader discovers and loads pipelines from the filesystem.","seoTitle":"The file loader finds pipelines in the filesystem","seoDescription":"Load pipelines from the filesystem.","keywords":null,"topics":["lookup-order"],"categories":null,"date":null},{"objectID":"https://pypyr.io/docs/loaders/string/","relLink":"/docs/loaders/string/","linkTitle":"string","title":"pypyr.loaders.string","description":"Inject pipelines directly as strings.","seoTitle":"Load pypyr pipelines from strings.","seoDescription":"Load pipelines directly from a string rather than have to create a file first.","keywords":null,"topics":["lookup-order"],"categories":null,"date":null},{"objectID":"https://pypyr.io/docs/pipelines/shortcuts/","relLink":"/docs/pipelines/shortcuts/","linkTitle":"shortcuts","title":"pipeline shortcuts","description":"Create re-usable shortcuts to pipeline run commands in config.","seoTitle":"Save shortcuts to pipeline run commands in config.","seoDescription":"Save shortcuts to complex pipeline taskrunner automation command sequences.","keywords":null,"topics":null,"categories":["pipelines"],"date":"2022-03-07T00:00:00Z"},{"objectID":"https://pypyr.io/updates/releases/v5.9.1/","relLink":"/updates/releases/v5.9.1/","linkTitle":"pypyr release v5.9.1","title":"pypyr release v5.9.1","description":"upgrade yaml lib dep","seoTitle":"pypyr release v5.9.1","seoDescription":null,"keywords":null,"topics":null,"categories":null,"date":"2023-09-22T03:13:53Z"},{"objectID":"https://pypyr.io/updates/releases/v5.9.0/","relLink":"/updates/releases/v5.9.0/","linkTitle":"pypyr release v5.9.0","title":"pypyr release v5.9.0","description":"string loader","seoTitle":"pypyr release v5.9.0","seoDescription":null,"keywords":null,"topics":null,"categories":null,"date":"2023-09-21T08:21:12Z"},{"objectID":"https://pypyr.io/updates/releases/v5.8.0/","relLink":"/updates/releases/v5.8.0/","linkTitle":"pypyr release v5.8.0","title":"pypyr release v5.8.0","description":"no_cache \u0026 clear_all","seoTitle":"pypyr release v5.8.0","seoDescription":null,"keywords":null,"topics":null,"categories":null,"date":"2023-03-13T01:40:33Z"},{"objectID":"https://pypyr.io/updates/releases/v5.7.1/","relLink":"/updates/releases/v5.7.1/","linkTitle":"pypyr release v5.7.1","title":"pypyr release v5.7.1","description":"python 3.11 maintenance release, no new features","seoTitle":"pypyr release v5.7.1","seoDescription":null,"keywords":null,"topics":null,"categories":null,"date":"2022-10-25T13:36:29Z"},{"objectID":"https://pypyr.io/updates/releases/v5.7.0/","relLink":"/updates/releases/v5.7.0/","linkTitle":"pypyr release v5.7.0","title":"pypyr release v5.7.0","description":"switch \u0026 argskwargs","seoTitle":"pypyr release v5.7.0","seoDescription":null,"keywords":null,"topics":null,"categories":null,"date":"2022-10-20T15:00:13Z"},{"objectID":"https://pypyr.io/docs/context-parsers/argskwargs/","relLink":"/docs/context-parsers/argskwargs/","linkTitle":"argskwargs","title":"pypyr.parser.argskwargs","description":"Pass args and/or key=value pairs from cli input to the pipeline.","seoTitle":"Parsing list args and key=value pairs from cli input arguments.","seoDescription":"Use a list of args and/or key=value pairs from cli input argument without writing any code.","keywords":null,"topics":["args"],"categories":["context parsers"],"date":"2022-10-20T10:26:36+01:00"},{"objectID":"https://pypyr.io/docs/steps/switch/","relLink":"/docs/steps/switch/","linkTitle":"switch","title":"pypyr.steps.switch","description":"Conditional branching for IF-THEN-ELSE control-of-flow.","seoTitle":"Branch pipeline execution with IF-THEN-ELSE control-of-flow.","seoDescription":"Switch selectively between step-groups in your pipeline by conditionally executing one rather than another.","keywords":null,"topics":["control-of-flow"],"categories":["steps"],"date":"2022-10-19T13:54:25+01:00"},{"objectID":"https://pypyr.io/updates/releases/v5.6.0/","relLink":"/updates/releases/v5.6.0/","linkTitle":"pypyr release v5.6.0","title":"pypyr release v5.6.0","description":"venv create \u0026 new flit build internals","seoTitle":"pypyr release v5.6.0","seoDescription":null,"keywords":null,"topics":null,"categories":null,"date":"2022-10-05T17:43:44Z"},{"objectID":"https://pypyr.io/docs/pipelines/built-in/venv-create/","relLink":"/docs/pipelines/built-in/venv-create/","linkTitle":"venv-create","title":"venv-create built-in pipeline","description":"Create venvs with extra dependencies from a config file.","seoTitle":"Create venvs from declarative yaml or toml config files.","seoDescription":"Create venvs in parallel with extra dependencies from a config file without writing any code.","keywords":null,"topics":null,"categories":["pipelines"],"date":"2022-10-05T14:16:54+01:00"},{"objectID":"https://pypyr.io/docs/pipelines/built-in/config-show/","relLink":"/docs/pipelines/built-in/config-show/","linkTitle":"config-show","title":"config-show built-in pipeline","description":"Display current config settings \u0026 sources.","seoTitle":null,"seoDescription":null,"keywords":null,"topics":null,"categories":["pipelines"],"date":"2022-10-05T14:11:11+01:00"},{"objectID":"https://pypyr.io/docs/pipelines/built-in/echo/","relLink":"/docs/pipelines/built-in/echo/","linkTitle":"echo","title":"echo built-in pipeline","description":"Echo input args to output.","seoTitle":null,"seoDescription":null,"keywords":null,"topics":null,"categories":["pipelines"],"date":"2022-10-05T14:07:42+01:00"},{"objectID":"https://pypyr.io/docs/pipelines/built-in/pypyrversion/","relLink":"/docs/pipelines/built-in/pypyrversion/","linkTitle":"pypyrversion","title":"pypyrversion built-in pipeline","description":"Print the pypyr \u0026 python version numbers.","seoTitle":null,"seoDescription":null,"keywords":null,"topics":null,"categories":["pipelines"],"date":"2022-10-05T14:07:29+01:00"},{"objectID":"https://pypyr.io/docs/pipelines/built-in/magritte/","relLink":"/docs/pipelines/built-in/magritte/","linkTitle":"magritte","title":"magritte built-in pipeline","description":"A totally serious thought about pipes.","seoTitle":null,"seoDescription":null,"keywords":null,"topics":null,"categories":["pipelines"],"date":"2022-10-05T14:05:19+01:00"},{"objectID":"https://pypyr.io/docs/steps/venv/","relLink":"/docs/steps/venv/","linkTitle":"venv","title":"pypyr.steps.venv","description":"Create a virtual environment (venv).","seoTitle":"Create virtual environments (venv) from config.","seoDescription":"Automate venv creation from config with no code! Create multiple venv fast in parallel with concurrent creation.","keywords":null,"topics":["execute external program"],"categories":["steps"],"date":"2022-10-04T15:27:43+01:00"},{"objectID":"https://pypyr.io/docs/pipelines/built-in/","relLink":"/docs/pipelines/built-in/","linkTitle":"built-in pipelines","title":"built-in pipelines","description":"Ready-made built-in pipelines","seoTitle":"List of pypyr's ready-made built-in pipelines out of the box.","seoDescription":"Summary listing of all of pypyr's ready-made built-in pipelines.","keywords":null,"topics":["built-in summary tables"],"categories":["pipelines"],"date":"2022-10-04T00:00:00Z"},{"objectID":"https://pypyr.io/updates/releases/v5.5.0/","relLink":"/updates/releases/v5.5.0/","linkTitle":"pypyr release v5.5.0","title":"pypyr release v5.5.0","description":"concurrent cmds \u0026 cmdOut dot notation","seoTitle":"pypyr release v5.5.0","seoDescription":null,"keywords":null,"topics":null,"categories":null,"date":"2022-05-26T13:18:48Z"},{"objectID":"https://pypyr.io/docs/steps/shells/","relLink":"/docs/steps/shells/","linkTitle":"shells","title":"pypyr.steps.shells","description":"Run shell statements concurrently in parallel.","seoTitle":"Execute shell statements concurrently","seoDescription":"Execute shell statements asynchronously in parallel with a taskrunner without writing any code.","keywords":null,"topics":["execute external program"],"categories":["steps"],"date":"2022-05-23T08:35:53+01:00"},{"objectID":"https://pypyr.io/docs/steps/cmds/","relLink":"/docs/steps/cmds/","linkTitle":"cmds","title":"pypyr.steps.cmds","description":"Run external programs, commands \u0026 scripts concurrently in parallel.","seoTitle":"Run any external programs, commands or scripts concurrently.","seoDescription":"Run executables asynchronously in parallel with a taskrunner without writing any code.","keywords":null,"topics":["execute external program"],"categories":["steps"],"date":"2022-05-23T08:35:40+01:00"},{"objectID":"https://pypyr.io/updates/releases/v5.4.0/","relLink":"/updates/releases/v5.4.0/","linkTitle":"pypyr release v5.4.0","title":"pypyr release v5.4.0","description":"run multiple commands \u0026 shell statements in same step","seoTitle":"pypyr release v5.4.0","seoDescription":null,"keywords":null,"topics":null,"categories":null,"date":"2022-04-14T17:44:08Z"},{"objectID":"https://pypyr.io/updates/releases/v5.3.0/","relLink":"/updates/releases/v5.3.0/","linkTitle":"pypyr release v5.3.0","title":"pypyr release v5.3.0","description":"shortcuts","seoTitle":"pypyr release v5.3.0","seoDescription":null,"keywords":null,"topics":null,"categories":null,"date":"2022-03-09T16:38:06Z"},{"objectID":"https://pypyr.io/updates/releases/v5.2.0/","relLink":"/updates/releases/v5.2.0/","linkTitle":"pypyr release v5.2.0","title":"pypyr release v5.2.0","description":"encoding \u0026 config","seoTitle":"pypyr release v5.2.0","seoDescription":null,"keywords":null,"topics":null,"categories":null,"date":"2022-02-19T18:41:22Z"},{"objectID":"https://pypyr.io/docs/steps/python/","relLink":"/docs/steps/python/","linkTitle":"python","title":"pypyr.steps.python","description":"Get the absolute path of the current Python executable.","seoTitle":"Get the absolute path of the current Python interpreter.","seoDescription":"Get the full path of the executable binary of the Python interpreter running the current pypyr session.","keywords":null,"topics":["execute external program"],"categories":["steps"],"date":"2022-02-19T16:04:49Z"},{"objectID":"https://pypyr.io/docs/steps/configvars/","relLink":"/docs/steps/configvars/","linkTitle":"configvars","title":"pypyr.steps.configvars","description":"Inject variables from config into pipeline.","seoTitle":"Inject variables from config into pypyr pipeline.","seoDescription":"Use variables from pyproject.toml or pypyr config yaml file in your automation pipeline.","keywords":null,"topics":["context"],"categories":["steps"],"date":"2022-02-13T13:54:20Z"},{"objectID":"https://pypyr.io/updates/releases/v5.1.0/","relLink":"/updates/releases/v5.1.0/","linkTitle":"pypyr release v5.1.0","title":"pypyr release v5.1.0","description":"toml \u0026 text+binary file read/write","seoTitle":"pypyr release v5.1.0","seoDescription":null,"keywords":null,"topics":null,"categories":null,"date":"2021-12-12T19:57:55Z"},{"objectID":"https://pypyr.io/docs/steps/fileread/","relLink":"/docs/steps/fileread/","linkTitle":"fileread","title":"pypyr.steps.fileread","description":"Read file into pypyr context.","seoTitle":"Read file into task-runner pipeline context at run-time.","seoDescription":"Load a text or binary file into the task-runner so that the pipeline can read, manipulate \u0026 change the data.","keywords":null,"topics":["filesystem"],"categories":["steps"],"date":"2021-12-12T15:02:21+01:00"},{"objectID":"https://pypyr.io/docs/steps/filewrite/","relLink":"/docs/steps/filewrite/","linkTitle":"filewrite","title":"pypyr.steps.filewrite","description":"Write payload to file.","seoTitle":"Write dynamic payload to output file.","seoDescription":"Create a text or binary file from any context input object with replacement token formatting in a task-runner pipeline.","keywords":null,"topics":["filesystem"],"categories":["steps"],"date":"2021-12-12T11:38:51+01:00"},{"objectID":"https://pypyr.io/docs/steps/filewritetoml/","relLink":"/docs/steps/filewritetoml/","linkTitle":"filewritetoml","title":"pypyr.steps.filewritetoml","description":"Write payload to file in toml format.","seoTitle":"Write dynamic payload to toml output file.","seoDescription":"Create a toml file from any context input object with replacement token formatting in a task-runner pipeline.","keywords":null,"topics":["filesystem","toml"],"categories":["steps"],"date":"2021-12-11T11:38:51+01:00"},{"objectID":"https://pypyr.io/topics/toml/","relLink":"/topics/toml/","linkTitle":"toml","title":"toml","description":"Load, format \u0026 write toml files.","seoTitle":"Load, format \u0026 write toml files during pipeline execution.","seoDescription":"Formatting \u0026 manipulating TOML config files is easy with ready-made built-in task-runner functionality.","keywords":null,"topics":null,"categories":null,"date":"2021-12-09T21:24:28+01:00"},{"objectID":"https://pypyr.io/docs/steps/fetchtoml/","relLink":"/docs/steps/fetchtoml/","linkTitle":"fetchtoml","title":"pypyr.steps.fetchtoml","description":"Load toml file into pypyr context.","seoTitle":"Load toml into task-runner pipeline context at run-time.","seoDescription":"Load \u0026 parse a toml file into the task-runner so that the pipeline can read, manipulate \u0026 change the data.","keywords":null,"topics":["filesystem","toml"],"categories":["steps"],"date":"2021-12-09T19:02:21+01:00"},{"objectID":"https://pypyr.io/docs/context-parsers/tomlfile/","relLink":"/docs/context-parsers/tomlfile/","linkTitle":"tomlfile","title":"pypyr.parser.tomlfile","description":"Load toml file into context from a cli arg path input.","seoTitle":"Load values from toml file into a task-runner pipeline.","seoDescription":"Read a toml file \u0026 pass the strongly typed values to the pipeline's context to use the toml values inside pipeline.","keywords":null,"topics":["args","filesystem","toml"],"categories":["context parsers"],"date":"2021-12-09T11:19:55+01:00"},{"objectID":"https://pypyr.io/updates/releases/v5.0.0/","relLink":"/updates/releases/v5.0.0/","linkTitle":"pypyr release v5.0.0","title":"pypyr release v5.0.0","description":"Relative pipelines + API breaking changes.","seoTitle":"pypyr release v5.0.0","seoDescription":null,"keywords":null,"topics":null,"categories":null,"date":"2021-11-20T13:17:39Z"},{"objectID":"https://pypyr.io/updates/releases/v4.6.0/","relLink":"/updates/releases/v4.6.0/","linkTitle":"pypyr release v4.6.0","title":"pypyr release v4.6.0","description":"set, add, append.","seoTitle":"pypyr release v4.6.0","seoDescription":null,"keywords":null,"topics":null,"categories":null,"date":"2021-10-06T11:20:21Z"},{"objectID":"https://pypyr.io/updates/releases/pypyr-slack/v1.2.0/","relLink":"/updates/releases/pypyr-slack/v1.2.0/","linkTitle":"pypyr-slack release v1.2.0","title":"pypyr-slack release v1.2.0","description":"Retire py 3.6. Add py 3.10 trove classifiers","seoTitle":"pypyr-slack release v1.2.0","seoDescription":null,"keywords":null,"topics":null,"categories":null,"date":"2021-10-06T10:01:18Z"},{"objectID":"https://pypyr.io/updates/releases/pypyr-aws/v1.3.0/","relLink":"/updates/releases/pypyr-aws/v1.3.0/","linkTitle":"pypyr-aws release v1.3.0","title":"pypyr-aws release v1.3.0","description":"Retire py 3.6. Add py 3.10 trove classifiers.","seoTitle":"pypyr-aws release v1.3.0","seoDescription":null,"keywords":null,"topics":null,"categories":null,"date":"2021-10-06T10:01:15Z"},{"objectID":"https://pypyr.io/docs/steps/add/","relLink":"/docs/steps/add/","linkTitle":"add","title":"pypyr.steps.add","description":"Add item to a set.","seoTitle":"Add item to a set in context.","seoDescription":"Add item to a set in the pypyr task-runner context.","keywords":null,"topics":["context","collections"],"categories":["steps"],"date":"2021-10-05T16:53:21+01:00"},{"objectID":"https://pypyr.io/topics/collections/","relLink":"/topics/collections/","linkTitle":"collections","title":"collections","description":"Using collections like lists, sets \u0026 dicts in the pypyr context.","seoTitle":"Collections in the pypyr context.","seoDescription":"Use collections like lists, sets, dicts \u0026 arrays in the pypyr context.","keywords":null,"topics":null,"categories":null,"date":"2021-10-05T15:10:17+01:00"},{"objectID":"https://pypyr.io/docs/steps/append/","relLink":"/docs/steps/append/","linkTitle":"append","title":"pypyr.steps.append","description":"Append item to a list.","seoTitle":"Append item to a list in context.","seoDescription":"Append item to the end of a list in the pypyr task-runner context.","keywords":null,"topics":["context","collections"],"categories":["steps"],"date":"2021-10-05T14:42:26+01:00"},{"objectID":"https://pypyr.io/updates/releases/v4.5.0/","relLink":"/updates/releases/v4.5.0/","linkTitle":"pypyr release v4.5.0","title":"pypyr release v4.5.0","description":"retry backoff \u0026 cleaner api init","seoTitle":"pypyr release v4.5.0","seoDescription":null,"keywords":null,"topics":null,"categories":null,"date":"2021-02-02T11:18:53Z"},{"objectID":"https://pypyr.io/docs/api/retry-backoff/","relLink":"/docs/api/retry-backoff/","linkTitle":"retry backoff","title":"custom retry backoff","description":"Create your own custom retry backoff algorithm.","seoTitle":"Create a custom retry backoff strategy for an automation pipeline.","seoDescription":"Create a custom task-runner retry backoff implementation in a few lines of Python code.","keywords":null,"topics":["custom code"],"categories":null,"date":"2021-01-18T00:00:00Z"},{"objectID":"https://pypyr.io/updates/releases/v4.4.1/","relLink":"/updates/releases/v4.4.1/","linkTitle":"pypyr release v4.4.1","title":"pypyr release v4.4.1","description":"context parser initialise to empty rather than None","seoTitle":"pypyr release v4.4.1","seoDescription":null,"keywords":null,"topics":null,"categories":null,"date":"2021-01-01T14:54:19Z"},{"objectID":"https://pypyr.io/updates/releases/v4.4.0/","relLink":"/updates/releases/v4.4.0/","linkTitle":"pypyr release v4.4.0","title":"pypyr release v4.4.0","description":"simplified py step syntax \u0026 imports for !py strings.","seoTitle":"pypyr release v4.4.0","seoDescription":null,"keywords":null,"topics":null,"categories":null,"date":"2020-12-26T15:50:27Z"},{"objectID":"https://pypyr.io/docs/steps/pyimport/","relLink":"/docs/steps/pyimport/","linkTitle":"pyimport","title":"pypyr.steps.pyimport","description":"Use external libraries in your !py expressions.","seoTitle":"Import standard or external libraries in your pipeline.","seoDescription":"Use any importable python code in your task-runner pipeline expressions.","keywords":null,"topics":["inline code"],"categories":["steps"],"date":"2020-11-25T18:20:22Z"},{"objectID":"https://pypyr.io/updates/releases/v4.3.0/","relLink":"/updates/releases/v4.3.0/","linkTitle":"pypyr release v4.3.0","title":"pypyr release v4.3.0","description":"streamlined api main() entry-point","seoTitle":"pypyr release v4.3.0","seoDescription":null,"keywords":null,"topics":null,"categories":null,"date":"2020-11-12T20:36:36Z"},{"objectID":"https://pypyr.io/updates/releases/v4.2.0/","relLink":"/updates/releases/v4.2.0/","linkTitle":"pypyr release v4.2.0","title":"pypyr release v4.2.0","description":"flat \u0026 recursive format, !jsonify, parsejson.","seoTitle":"pypyr release v4.2.0","seoDescription":null,"keywords":null,"topics":null,"categories":null,"date":"2020-10-30T00:27:59Z"},{"objectID":"https://pypyr.io/docs/steps/jsonparse/","relLink":"/docs/steps/jsonparse/","linkTitle":"jsonparse","title":"pypyr.steps.jsonparse","description":"Parse json string into pypyr context.","seoTitle":"Parse a json string into a pypyr context object.","seoDescription":"Parse a json string such as the output of a command, and deserialize it to the pypyr context.","keywords":null,"topics":["json"],"categories":["steps"],"date":"2020-10-26T13:12:12Z"},{"objectID":"https://pypyr.io/docs/steps/set/","relLink":"/docs/steps/set/","linkTitle":"set","title":"pypyr.steps.set","description":"Set \u0026 format context keys.","seoTitle":"Set task-runner pipeline context value variables.","seoDescription":"Set pipeline context to static or dynamic values, read interactive user input from stdin \u0026 use formatting expressions.","keywords":null,"topics":["context"],"categories":["steps"],"date":"2020-10-05T13:28:46+01:00"},{"objectID":"https://pypyr.io/updates/news/new-site-launch-hugo/","relLink":"/updates/news/new-site-launch-hugo/","linkTitle":"new site launch with hugo","title":"new site launch with hugo","description":"This is pypyr's new website for technical documentation, help \u0026 HOW TOs.","seoTitle":"new technical documentation site launch with hugo","seoDescription":null,"keywords":null,"topics":null,"categories":null,"date":"2020-09-09T13:44:57+01:00"},{"objectID":"https://pypyr.io/docs/thank-you/built-with-hugo/","relLink":"/docs/thank-you/built-with-hugo/","linkTitle":"built with hugo","title":"technical documentation built with hugo","description":"Open-source technical documentation \u0026 product site template built with Hugo static site generator.","seoTitle":null,"seoDescription":null,"keywords":null,"topics":null,"categories":null,"date":"2020-09-07T12:09:06+01:00"},{"objectID":"https://pypyr.io/updates/releases/v4.1.0/","relLink":"/updates/releases/v4.1.0/","linkTitle":"release v4.1.0","title":"release v4.1.0","description":"step description (skipping) when skipping.","seoTitle":"pypyr release v4.1.0","seoDescription":null,"keywords":null,"topics":null,"categories":null,"date":"2020-08-30T19:04:37Z"},{"objectID":"https://pypyr.io/updates/releases/pypyr-aws/v1.1.2/","relLink":"/updates/releases/pypyr-aws/v1.1.2/","linkTitle":"pypyr-aws release v1.1.2","title":"pypyr-aws release v1.1.2","description":"updated readme","seoTitle":"pypyr-aws release v1.1.2","seoDescription":null,"keywords":null,"topics":null,"categories":null,"date":"2020-08-30T14:39:52Z"},{"objectID":"https://pypyr.io/updates/releases/pypyr-slack/v1.1.1/","relLink":"/updates/releases/pypyr-slack/v1.1.1/","linkTitle":"pypyr-slack release v1.1.1","title":"pypyr-slack release v1.1.1","description":"slack api 2: no functional change","seoTitle":"pypyr-slack release v1.1.1","seoDescription":null,"keywords":null,"topics":null,"categories":null,"date":"2020-08-30T13:25:13Z"},{"objectID":"https://pypyr.io/docs/plugins/aws/steps/ecswaitprep/","relLink":"/docs/plugins/aws/steps/ecswaitprep/","linkTitle":"ecswaitprep","title":"pypyraws.steps.ecswaitprep","description":"Run me after an ecs task run or stop to prepare an ecs waiter.","seoTitle":"Wait for ECS state changes without writing code.","seoDescription":"Wait for ECS services or tasks to start or stop without writing code.","keywords":null,"topics":null,"categories":["steps"],"date":"2020-08-20T00:00:00Z"},{"objectID":"https://pypyr.io/docs/plugins/aws/steps/s3fetchjson/","relLink":"/docs/plugins/aws/steps/s3fetchjson/","linkTitle":"s3fetchjson","title":"pypyraws.steps.s3fetchjson","description":"Fetch a json file from s3 into the pypyr context.","seoTitle":"Fetch a json file from S3 into the task-runner context.","seoDescription":"Get a JSON file from S3 and parse the JSON without writing code.","keywords":null,"topics":["json"],"categories":["steps"],"date":"2020-08-20T00:00:00Z"},{"objectID":"https://pypyr.io/docs/plugins/aws/steps/s3fetchyaml/","relLink":"/docs/plugins/aws/steps/s3fetchyaml/","linkTitle":"s3fetchyaml","title":"pypyraws.steps.s3fetchyaml","description":"Fetch a yaml file from s3 into the pypyr context.","seoTitle":"Fetch a yaml file from S3 into the task-runner context.","seoDescription":"Get a YAML file from S3 and parse the YAML without writing code.","keywords":null,"topics":["yaml"],"categories":["steps"],"date":"2020-08-20T00:00:00Z"},{"objectID":"https://pypyr.io/docs/plugins/slack/steps/send/","relLink":"/docs/plugins/slack/steps/send/","linkTitle":"send","title":"pypyrslack.steps.send","description":"Send messages or notifications to slack.","seoTitle":"Send notification to slack from task runner automation pipeline.","seoDescription":"Send slack messages or notifications from an automation pipeline, without writing code.","keywords":null,"topics":null,"categories":["steps"],"date":"2020-08-20T00:00:00Z"},{"objectID":"https://pypyr.io/docs/plugins/aws/steps/wait/","relLink":"/docs/plugins/aws/steps/wait/","linkTitle":"wait","title":"pypyraws.steps.wait","description":"Wait for an aws client waiter method to complete.","seoTitle":"Wait for any AWS client waiter status changes.","seoDescription":"Wait for AWS state changes before continuing with pipeline, without writing code.","keywords":null,"topics":null,"categories":["steps"],"date":"2020-08-20T00:00:00Z"},{"objectID":"https://pypyr.io/docs/plugins/aws/steps/waitfor/","relLink":"/docs/plugins/aws/steps/waitfor/","linkTitle":"waitfor","title":"pypyraws.steps.waitfor","description":"Wait for any aws client method to complete, even when it doesn't have an official waiter.","seoTitle":"Create a custom AWS waiter without writing code.","seoDescription":"AWS does not have waiters for all state changes. Use this to create your own waiter for any property state change.","keywords":null,"topics":null,"categories":["steps"],"date":"2020-08-20T00:00:00Z"},{"objectID":"https://pypyr.io/docs/plugins/aws/authentication/","relLink":"/docs/plugins/aws/authentication/","linkTitle":"authentication","title":"authentication","description":"How to authenticate with AWS.","seoTitle":"Authenticate AWS credentials from task-runner pipeline.","seoDescription":"How to configure your credentials \u0026 authenticate your automation pipeline against AWS.","keywords":null,"topics":null,"categories":null,"date":"2020-08-19T00:00:00Z"},{"objectID":"https://pypyr.io/docs/plugins/slack/authentication/","relLink":"/docs/plugins/slack/authentication/","linkTitle":"authentication","title":"authentication","description":"How to authenticate with slack.","seoTitle":"Authenticate slack credentials from task-runner pipeline.","seoDescription":"How to configure your credentials \u0026 authenticate your automation pipeline against slack.","keywords":null,"topics":null,"categories":null,"date":"2020-08-19T00:00:00Z"},{"objectID":"https://pypyr.io/docs/plugins/aws/","relLink":"/docs/plugins/aws/","linkTitle":"aws","title":"aws plugin","description":"Automate AWS devops. Interact with the AWS sdk api without writing any code. Supports all AWS Client functions, such as S3, EC2, ECS \u0026 co. via the AWS low-level Client API.","seoTitle":"Automate AWS scripting with an automation task-runner.","seoDescription":"AWS automation without code. Auto retries, conditional execution \u0026 loops. Prepare and parse complex inputs \u0026 outputs.","keywords":null,"topics":null,"categories":null,"date":"2020-08-19T00:00:00Z"},{"objectID":"https://pypyr.io/docs/plugins/aws/steps/client/","relLink":"/docs/plugins/aws/steps/client/","linkTitle":"client","title":"pypyraws.steps.client","description":"Execute any low-level AWS client method.","seoTitle":"Use any low-level AWS client method without writing code.","seoDescription":"Interact with all the AWS service APIs without writing code.","keywords":null,"topics":null,"categories":["steps"],"date":"2020-08-19T00:00:00Z"},{"objectID":"https://pypyr.io/docs/plugins/slack/","relLink":"/docs/plugins/slack/","linkTitle":"slack","title":"slack plugin","description":"Send messages to Slack.","seoTitle":"Send slack notifications from an automation pipeline.","seoDescription":"Send messages to slack for notifications and status updates when your task-runner pipeline runs.","keywords":null,"topics":null,"categories":null,"date":"2020-08-19T00:00:00Z"},{"objectID":"https://pypyr.io/docs/plugins/aws/substitutions/","relLink":"/docs/plugins/aws/substitutions/","linkTitle":"substitutions","title":"substitutions","description":"Use substitutions for string interpolation \u0026 dynamically setting values in the AWS client.","seoTitle":"Set AWS client inputs using interpolation formatting expressions.","seoDescription":"Dynamically set AWS client arguments without writing code for manual string parsing.","keywords":null,"topics":null,"categories":null,"date":"2020-08-19T00:00:00Z"},{"objectID":"https://pypyr.io/updates/releases/v4.0.0/","relLink":"/updates/releases/v4.0.0/","linkTitle":"release v4.0.0","title":"release v4.0.0","description":"Stop in failure handlers. `in` context cleanup default.","seoTitle":"pypyr release v4.0.0","seoDescription":null,"keywords":null,"topics":null,"categories":null,"date":"2020-08-17T19:27:51Z"},{"objectID":"https://pypyr.io/docs/steps/contextcopy/","relLink":"/docs/steps/contextcopy/","linkTitle":"contextcopy","title":"pypyr.steps.contextcopy","description":"Copy entire context keys.","seoTitle":"Copy context key values in a task-runner pipeline.","seoDescription":"Copy context keys with their entire values from other context keys in a task-runner pipeline context.","keywords":null,"topics":["context"],"categories":["steps"],"date":"2020-08-15T20:28:42+01:00"},{"objectID":"https://pypyr.io/updates/releases/v3.2.2/","relLink":"/updates/releases/v3.2.2/","linkTitle":"release v3.2.2","title":"release v3.2.2","description":"line + col no., repo rename, readme updates.","seoTitle":"pypyr release v3.2.2","seoDescription":null,"keywords":null,"topics":null,"categories":null,"date":"2020-08-13T19:34:08Z"},{"objectID":"https://pypyr.io/docs/api/","relLink":"/docs/api/","linkTitle":"api","title":"api","description":"Easily extend pypyr with the simple Python API. Create your own steps and context argument parsers. Call pypyr programmatically from your own code.","seoTitle":"Simple pipeline task-runner runner Python API for workflow automation.","seoDescription":"Easily extend pypyr with your own custom steps, cli input arguments \u0026 invoke pipelines programmatically from the API.","keywords":null,"topics":["custom code"],"categories":null,"date":"2020-08-12T00:00:00Z"},{"objectID":"https://pypyr.io/docs/steps/assert/","relLink":"/docs/steps/assert/","linkTitle":"assert","title":"pypyr.steps.assert","description":"Stop pipeline if item in context is not as expected.","seoTitle":"Stop pipeline execution \u0026 raise an error if assert evaluates false.","seoDescription":"Stop pipeline execution \u0026 raise an error when a dynamic assert condition evaluates to False.","keywords":null,"topics":["control-of-flow","debug"],"categories":["steps"],"date":"2020-08-12T00:00:00Z"},{"objectID":"https://pypyr.io/docs/steps/call/","relLink":"/docs/steps/call/","linkTitle":"call","title":"pypyr.steps.call","description":"Call another step-group. Continue from the same place after the called groups complete.","seoTitle":"Call another step group in the same pipeline.","seoDescription":"Call another step-group in the same pipeline \u0026 continue from the invocation point after the invoked steps complete.","keywords":null,"topics":["control-of-flow"],"categories":["steps"],"date":"2020-08-12T00:00:00Z"},{"objectID":"https://pypyr.io/docs/cli/","relLink":"/docs/cli/","linkTitle":"cli","title":"cli","description":"Run yaml pipelines from the simple pypyr command line interface (CLI). Pipelines are in simple human-readable yaml for agentless automation.","seoTitle":"Run yaml pipelines from the cli with pypyr.","seoDescription":"The pypyr cli is simple \u0026 intuitive, for easy task automation from the command line.","keywords":null,"topics":null,"categories":null,"date":"2020-08-12T00:00:00Z"},{"objectID":"https://pypyr.io/docs/api/context-parser/","relLink":"/docs/api/context-parser/","linkTitle":"context parser","title":"custom context parser","description":"Create your own context parser to parse cli input arguments.","seoTitle":"Parse custom cli arguments for a task-runner pipeline.","seoDescription":"Customize how you parse cli input arguments when you run a task-runner pipeline from the cli.","keywords":null,"topics":["custom code","context"],"categories":null,"date":"2020-08-12T00:00:00Z"},{"objectID":"https://pypyr.io/docs/context-parsers/","relLink":"/docs/context-parsers/","linkTitle":"context parsers","title":"context parsers","description":"pypyr context parsers initialize the context from your own custom cli input arguments.","seoTitle":"Built-in pypyr context parsers for cli args.","seoDescription":"Parse task-runner pipeline custom cli input arguments as key-value pairs, comma delimited values, simple strings \u0026 more.","keywords":null,"topics":["built-in summary tables","context"],"categories":null,"date":"2020-08-12T00:00:00Z"},{"objectID":"https://pypyr.io/docs/contributing/contribute-to-pypyr/","relLink":"/docs/contributing/contribute-to-pypyr/","linkTitle":"contribute to pypyr","title":"contribute to pypyr","description":"pypyr is open-source and your contributions are very welcome!","seoTitle":"How to contribute to pypyr open source software.","seoDescription":"This contribution guide will help you contribute to open-source software even if you don't code.","keywords":null,"topics":null,"categories":null,"date":"2020-08-12T00:00:00Z"},{"objectID":"https://pypyr.io/topics/control-of-flow/","relLink":"/topics/control-of-flow/","linkTitle":"control-of-flow","title":"control-of-flow","description":"Flow control for your pipelines. Conditional execution, loops, jump between steps \u0026 stop processing.","seoTitle":"Control-of-Flow for a task-runner pipeline.","seoDescription":"Conditional execution, loops, jump between steps \u0026 stop processing instructions in a pipeline.","keywords":null,"topics":null,"categories":null,"date":"2020-08-12T00:00:00Z"},{"objectID":"https://pypyr.io/docs/cli/custom-args/","relLink":"/docs/cli/custom-args/","linkTitle":"custom args","title":"custom args","description":"Passing custom args from the cli to your pipeline.","seoTitle":"Passing custom args with the pipeline task-runner cli.","seoDescription":"Pass your own custom optional arguments from the cli to the task-runner pipeline \u0026 set your own default values.","keywords":null,"topics":["args"],"categories":null,"date":"2020-08-12T00:00:00Z"},{"objectID":"https://pypyr.io/docs/api/pipeline-loader/","relLink":"/docs/api/pipeline-loader/","linkTitle":"custom pype loader","title":"custom pype loader","description":"Create a custom pipeline loader to load pipelines from a different place.","seoTitle":"Customize how \u0026 from where you load task-runner pipelines.","seoDescription":"Create a custom pipeline loader to get pipelines from s3, consul or your own pipeline storage system.","keywords":null,"topics":["custom code"],"categories":["pipelines"],"date":"2020-08-12T00:00:00Z"},{"objectID":"https://pypyr.io/docs/decorators/","relLink":"/docs/decorators/","linkTitle":"decorators","title":"step decorators","description":"Selectively run, skip, repeat, loop \u0026 handle errors on individual steps.","seoTitle":"Apply looping, conditional \u0026 error logic to any task-runner step.","seoDescription":"Selectively run, skip, repeat \u0026 loop any single step in pipeline. Handle errors \u0026 automatic retries.","keywords":null,"topics":["built-in summary tables","pipeline format"],"categories":null,"date":"2020-08-12T00:00:00Z"},{"objectID":"https://pypyr.io/docs/contributing/developers-guide/","relLink":"/docs/contributing/developers-guide/","linkTitle":"developer's guide for pypyr","title":"developer's guide for pypyr","description":"Handy developer \u0026 coding tips for pypyr contributors.","seoTitle":"Developer's guide for pypyr open-source contributors.","seoDescription":"Developer's guide for coding style, testing, code coverage and pull requests.","keywords":null,"topics":["custom code"],"categories":null,"date":"2020-08-12T00:00:00Z"},{"objectID":"https://pypyr.io/docs/","relLink":"/docs/","linkTitle":"docs","title":"pypyr docs","description":"pypyr help documentation","seoTitle":"pypyr technical help documentation \u0026 usage instructions home.","seoDescription":"pypyr is a task-runner cli \u0026 api for yaml pipelines. This is technical documentation for the open-source pypyr project.","keywords":null,"topics":null,"categories":null,"date":"2020-08-12T00:00:00Z"},{"objectID":"https://pypyr.io/docs/steps/echo/","relLink":"/docs/steps/echo/","linkTitle":"echo","title":"pypyr.steps.echo","description":"Echo context value of `echoMe` to the output.","seoTitle":"Echo pipeline step input to the console \u0026 log.","seoDescription":"Print simple \u0026 complex nested types to the stdout console \u0026 log output.","keywords":null,"topics":["print"],"categories":["steps"],"date":"2020-08-12T00:00:00Z"},{"objectID":"https://pypyr.io/legal/","relLink":"/legal/","linkTitle":"legal","title":"legal","description":"pypyr legal notices.","seoTitle":null,"seoDescription":null,"keywords":null,"topics":null,"categories":null,"date":"2020-08-12T00:00:00Z"},{"objectID":"https://pypyr.io/docs/plugins/","relLink":"/docs/plugins/","linkTitle":"plugins","title":"plugins overview","description":"A listing of pypyr's official plug-ins. Add AWS \u0026 Slack functions to your pipelines.","seoTitle":"Extend pypyr task-runner functionality with plug-ins.","seoDescription":"Plug-ins provide extra functionality for external libraries \u0026 dependencies outside of the pypyr core.","keywords":null,"topics":["built-in summary tables"],"categories":null,"date":"2020-08-12T00:00:00Z"},{"objectID":"https://pypyr.io/legal/privacy-notice/","relLink":"/legal/privacy-notice/","linkTitle":"privacy notice","title":"privacy notice","description":"pypyr website privacy \u0026 cookie notice.","seoTitle":null,"seoDescription":null,"keywords":null,"topics":null,"categories":null,"date":"2020-08-12T00:00:00Z"},{"objectID":"https://pypyr.io/","relLink":"/","linkTitle":"pypyr","title":"task-runner for automation pipelines defined in yaml","description":"pypyr is a task-runner CLI \u0026 API with straightforward yaml pipelines. Free \u0026 open-source. Agentless task automation.","seoTitle":"pypyr: task-runner for automation pipelines defined in yaml","seoDescription":null,"keywords":null,"topics":null,"categories":null,"date":"2020-08-12T00:00:00Z"},{"objectID":"https://pypyr.io/docs/api/run-pipeline/","relLink":"/docs/api/run-pipeline/","linkTitle":"run pipeline api","title":"run pipeline api","description":"Run pipeline programmatically from the API in your own code.","seoTitle":"Run an automation pipeline programmatically in your own code.","seoDescription":"Use the Python API to run task-runner pipeline workflows from your own code in a few simple lines.","keywords":null,"topics":["custom code"],"categories":null,"date":"2020-08-12T00:00:00Z"},{"objectID":"https://pypyr.io/docs/api/step/","relLink":"/docs/api/step/","linkTitle":"step","title":"custom step","description":"Create your own custom step.","seoTitle":"Easily code custom pipeline steps.","seoDescription":"Create a custom pypyr pipeline task-runner step in a few lines of Python code. Ready-made retries \u0026 loops for your code.","keywords":null,"topics":["custom code"],"categories":["steps"],"date":"2020-08-12T00:00:00Z"},{"objectID":"https://pypyr.io/docs/plugins/aws/steps/","relLink":"/docs/plugins/aws/steps/","linkTitle":"steps","title":"aws steps overview","description":"A listing of AWS built-in ready-made steps. Scroll through all pypyr's AWS built-in steps here.","seoTitle":null,"seoDescription":null,"keywords":null,"topics":["built-in summary tables"],"categories":null,"date":"2020-08-12T00:00:00Z"},{"objectID":"https://pypyr.io/docs/plugins/slack/steps/","relLink":"/docs/plugins/slack/steps/","linkTitle":"steps","title":"slack steps overview","description":"A listing of slack built-in ready-made steps. Scroll through all pypyr's slack built-in steps here.","seoTitle":null,"seoDescription":null,"keywords":null,"topics":null,"categories":null,"date":"2020-08-12T00:00:00Z"},{"objectID":"https://pypyr.io/docs/steps/","relLink":"/docs/steps/","linkTitle":"steps","title":"steps overview","description":"A listing of pypyr built-in ready-made steps. Scroll through all pypyr's built-in steps here.","seoTitle":null,"seoDescription":null,"keywords":null,"topics":["built-in summary tables"],"categories":null,"date":"2020-08-12T00:00:00Z"},{"objectID":"https://pypyr.io/docs/substitutions/","relLink":"/docs/substitutions/","linkTitle":"substitutions","title":"substitutions","description":"Use string formatting expressions to make substitutions or token replacements in context strings, fields or config.","seoTitle":"Formatting expressions, string interpolation \u0026 token replacement.","seoDescription":"Formatting expressions for type safe assignment, string interpolation \u0026 token replacement in a pipeline task-runner.","keywords":null,"topics":["built-in summary tables"],"categories":null,"date":"2020-08-12T00:00:00Z"},{"objectID":"https://pypyr.io/docs/thank-you/dependencies/","relLink":"/docs/thank-you/dependencies/","linkTitle":"dependencies","title":"dependencies","description":"Listing the open-source libraries pypyr uses.","seoTitle":"pypyr dependencies","seoDescription":null,"keywords":null,"topics":null,"categories":null,"date":"2020-08-10T14:18:44+01:00"},{"objectID":"https://pypyr.io/docs/thank-you/","relLink":"/docs/thank-you/","linkTitle":"thank you","title":"thank you","description":"pypyr acknowledgements, dependencies \u0026 thank yous","seoTitle":null,"seoDescription":null,"keywords":null,"topics":null,"categories":null,"date":"2020-08-10T14:15:57+01:00"},{"objectID":"https://pypyr.io/press-kit/","relLink":"/press-kit/","linkTitle":"press kit","title":"press kit","description":"pypyr logo, images \u0026 banners for social media.","seoTitle":null,"seoDescription":null,"keywords":null,"topics":null,"categories":null,"date":"2020-08-08T20:06:45+01:00"},{"objectID":"https://pypyr.io/legal/licensing/","relLink":"/legal/licensing/","linkTitle":"copyright \u0026 licensing","title":"copyright \u0026 licensing","description":"pypyr copyright \u0026 licensing statement.","seoTitle":null,"seoDescription":null,"keywords":null,"topics":null,"categories":null,"date":"2020-08-08T15:04:34+01:00"},{"objectID":"https://pypyr.io/categories/steps/","relLink":"/categories/steps/","linkTitle":"steps","title":"steps","description":"Summary list of all ready-made steps in the pypyr estate.","seoTitle":"Summary list of all ready-made steps in the pypyr estate.","seoDescription":"A pypyr step encapsulates a ready-made automation task for you.","keywords":null,"topics":null,"categories":null,"date":"2020-08-07T23:59:37+01:00"},{"objectID":"https://pypyr.io/categories/pipelines/","relLink":"/categories/pipelines/","linkTitle":"pipelines","title":"pipelines","description":"How to load \u0026 run pipelines.","seoTitle":"How to load \u0026 run automation pipelines.","seoDescription":"Load your own pipelines from disk or your own custom storage, or use the built-in pipelines.","keywords":null,"topics":null,"categories":null,"date":"2020-08-07T23:57:33+01:00"},{"objectID":"https://pypyr.io/categories/install/","relLink":"/categories/install/","linkTitle":"install","title":"install","description":"How to install pypyr \u0026 run your first pipeline.","seoTitle":"How to install pypyr \u0026 run your first pipeline.","seoDescription":"Install the pypyr task-runner \u0026 run your first pipeline in less than a minute.","keywords":null,"topics":null,"categories":null,"date":"2020-08-07T23:55:27+01:00"},{"objectID":"https://pypyr.io/categories/context-parsers/","relLink":"/categories/context-parsers/","linkTitle":"context parsers","title":"context parsers","description":"Summary list of all context parsers in the pypyr estate.","seoTitle":"Summary list of all context parsers in the pypyr estate.","seoDescription":"Context parsers initialize your task-runner automation pipeline context from the cli.","keywords":null,"topics":null,"categories":null,"date":"2020-08-07T23:53:40+01:00"},{"objectID":"https://pypyr.io/topics/pipeline-format/","relLink":"/topics/pipeline-format/","linkTitle":"pipeline format","title":"pipeline format","description":"The pypyr pipeline format is simple, human-readable yaml.","seoTitle":"Task-runner pipeline format in yaml.","seoDescription":"pypyr uses a simple human-readable yaml format for a task-runner automation pipeline.","keywords":null,"topics":null,"categories":null,"date":"2020-08-07T23:31:20+01:00"},{"objectID":"https://pypyr.io/topics/yaml/","relLink":"/topics/yaml/","linkTitle":"yaml","title":"yaml","description":"Load, format \u0026 write yaml files.","seoTitle":"Load, format \u0026 write yaml files during pipeline execution.","seoDescription":"Formatting \u0026 manipulating yaml config files is easy with ready-made built-in task-runner functionality.","keywords":null,"topics":null,"categories":null,"date":"2020-08-07T22:07:51+01:00"},{"objectID":"https://pypyr.io/topics/time/","relLink":"/topics/time/","linkTitle":"time","title":"time","description":"Work with time \u0026 timestamps, local \u0026 UTC datetime and formatting.","seoTitle":"Work with date \u0026 time in a task-runner automation pipeline.","seoDescription":"Get \u0026 format timestamps during pipeline processing, for local wall-time and UTC.","keywords":null,"topics":null,"categories":null,"date":"2020-08-07T21:47:35+01:00"},{"objectID":"https://pypyr.io/topics/print/","relLink":"/topics/print/","linkTitle":"print","title":"print","description":"Print output to console \u0026 log.","seoTitle":"Print output to console \u0026 log in a task-runner automation pipeline.","seoDescription":"Indicate step progress with log output, echo messages to output, write to stdout \u0026 log.","keywords":null,"topics":null,"categories":null,"date":"2020-08-07T21:43:49+01:00"},{"objectID":"https://pypyr.io/topics/paths/","relLink":"/topics/paths/","linkTitle":"paths","title":"paths","description":"Work with filesystem paths \u0026 globs.","seoTitle":"Filesystem paths in a task-runner automation pipeline.","seoDescription":"Use cross-platform paths, check if files and directories exist and use globs.","keywords":null,"topics":null,"categories":null,"date":"2020-08-07T21:40:41+01:00"},{"objectID":"https://pypyr.io/topics/loops/","relLink":"/topics/loops/","linkTitle":"loops","title":"loops","description":"Repeat any step in a loop.","seoTitle":"Repeat any task-runner automation pipeline task in a loop.","seoDescription":"Run any task, like another pipeline, external application call or shell commands, in a loop without writing any code.","keywords":null,"topics":null,"categories":null,"date":"2020-08-07T11:58:52+01:00"},{"objectID":"https://pypyr.io/topics/json/","relLink":"/topics/json/","linkTitle":"json","title":"json","description":"Load, format \u0026 write json files.","seoTitle":"Load, format \u0026 write json files during pipeline execution.","seoDescription":"Formatting \u0026 manipulating JSON config files is easy with ready-made built-in task-runner functionality.","keywords":null,"topics":null,"categories":null,"date":"2020-08-06T21:24:28+01:00"},{"objectID":"https://pypyr.io/topics/inline-code/","relLink":"/topics/inline-code/","linkTitle":"inline code","title":"inline code","description":"Execute inline code as part of your pipeline.  Part of the power of pypyr is that you can seamlessly mix inline code with external executables.","seoTitle":"Execute inline code in an automation pipeline.","seoDescription":"Part of the power of pypyr is that you can seamlessly mix inline code with external executables.","keywords":null,"topics":null,"categories":null,"date":"2020-08-06T21:19:16+01:00"},{"objectID":"https://pypyr.io/topics/filesystem/","relLink":"/topics/filesystem/","linkTitle":"filesystem","title":"filesystem","description":"Read \u0026 write files and work with paths on the local filesystem.","seoTitle":"Work with files \u0026 paths in a task-runner automation pipeline.","seoDescription":"Read, write and format files as part of your automation pipeline tasks.","keywords":null,"topics":null,"categories":null,"date":"2020-08-06T21:07:28+01:00"},{"objectID":"https://pypyr.io/topics/execute-external-program/","relLink":"/topics/execute-external-program/","linkTitle":"execute external program","title":"execute external program","description":"Run external programs, applications \u0026 commands in your pipeline.","seoTitle":"Execute external programs with your task-runner automation pipeline.","seoDescription":"Run shell commands, use bashisms \u0026 execute any external executable from your automation pipeline.","keywords":null,"topics":null,"categories":null,"date":"2020-08-06T20:58:04+01:00"},{"objectID":"https://pypyr.io/topics/error-handling/","relLink":"/topics/error-handling/","linkTitle":"error handling","title":"error handling","description":"pypyr stops execution on any error by default. You can also handle errors instead, and selectively trap, ignore or retry exceptions.","seoTitle":"How to handle errors in a task-runner automation pipeline.","seoDescription":"Handle pipeline errors with compensations in failure handlers, and also selectively trap, ignore or retry exceptions.","keywords":null,"topics":null,"categories":null,"date":"2020-08-06T20:40:26+01:00"},{"objectID":"https://pypyr.io/topics/environment-variables/","relLink":"/topics/environment-variables/","linkTitle":"environment variables","title":"environment variables","description":"Use $ENV environment variables in your pipelines.","seoTitle":"Use environment variables in your pipelines.","seoDescription":"Get, set \u0026 unset environment variables in your task-runner automation pipeline. Format environment variable values.","keywords":null,"topics":null,"categories":null,"date":"2020-08-06T20:24:00+01:00"},{"objectID":"https://pypyr.io/topics/debug/","relLink":"/topics/debug/","linkTitle":"debug","title":"debug","description":"Debug \u0026 troubleshoot your pipelines.","seoTitle":"Debug \u0026 troubleshoot your task-runner automation pipelines.","seoDescription":"pypyr provides extensive logging \u0026 specific debugging instructions to help troubleshoot your pipelines.","keywords":null,"topics":null,"categories":null,"date":"2020-08-05T21:20:49+01:00"},{"objectID":"https://pypyr.io/topics/custom-code/","relLink":"/topics/custom-code/","linkTitle":"custom code","title":"custom code","description":"pypyr is super easy to customize with very non-demanding function signatures for your own steps, context parsers \u0026 pipeline loaders. Call pipelines from your own code via the API.","seoTitle":"Create custom tasks for a task-runner automation pipeline.","seoDescription":"Easily code your own custom steps, input argument parsers \u0026 load pipelines from custom locations.","keywords":null,"topics":null,"categories":null,"date":"2020-08-05T21:13:06+01:00"},{"objectID":"https://pypyr.io/topics/context/","relLink":"/topics/context/","linkTitle":"context","title":"context","description":"The pypyr context maintains state for the duration of the pipeline. You use the context to persist \u0026 pass values between steps in the pipeline.","seoTitle":"Persist values between steps in a task-runner pipeline.","seoDescription":"The context maintains state for the duration of the pipeline for anything from simple types to complex objects.","keywords":null,"topics":null,"categories":null,"date":"2020-08-05T20:51:45+01:00"},{"objectID":"https://pypyr.io/topics/built-in-summary-tables/","relLink":"/topics/built-in-summary-tables/","linkTitle":"built-in summary tables","title":"built-in summary tables","description":"Convenient one page summary listing of all available items in a section.","seoTitle":"Index of summary listing tables for pypyr functionality.","seoDescription":"Summary listings give you a handy one-page summary of all available items in a section.","keywords":null,"topics":null,"categories":null,"date":"2020-08-05T20:46:07+01:00"},{"objectID":"https://pypyr.io/topics/args/","relLink":"/topics/args/","linkTitle":"args","title":"args","description":"How to pass your own arguments from the cli.","seoTitle":"Custom cli arguments for a task-runner pipeline.","seoDescription":"Pass your own cli input arguments \u0026 switches to your task automation pipelines without writing any code.","keywords":null,"topics":null,"categories":null,"date":"2020-08-05T20:39:49+01:00"},{"objectID":"https://pypyr.io/docs/decorators/while/","relLink":"/docs/decorators/while/","linkTitle":"while","title":"while loop decorator","description":"Repeat step until stop condition is `True` or up to the maximum iteration count.","seoTitle":"Do a while loop in task-runner pipeline.","seoDescription":"Repeat steps until a stop condition is True or until you reach a maximum iteration count.","keywords":null,"topics":["control-of-flow","loops","pipeline format"],"categories":null,"date":"2020-07-14T13:09:24+01:00"},{"objectID":"https://pypyr.io/docs/decorators/skip/","relLink":"/docs/decorators/skip/","linkTitle":"skip","title":"skip decorator","description":"Skip this step if condition True.","seoTitle":"Selectively skip a task-runner pipeline step.","seoDescription":"Don't run a pipeline step if this condition is boolean True. Control which steps in your pipeline execute.","keywords":null,"topics":["control-of-flow","pipeline format"],"categories":null,"date":"2020-07-14T11:38:26+01:00"},{"objectID":"https://pypyr.io/docs/decorators/run/","relLink":"/docs/decorators/run/","linkTitle":"run","title":"run decorator","description":"Run this step only if condition True.","seoTitle":"Selectively run a task-runner pipeline step.","seoDescription":"Only run a pipeline step if this condition is boolean True. Control which steps in your pipeline execute.","keywords":null,"topics":["control-of-flow","pipeline format"],"categories":null,"date":"2020-07-14T11:02:07+01:00"},{"objectID":"https://pypyr.io/docs/decorators/retry/","relLink":"/docs/decorators/retry/","linkTitle":"retry","title":"retry decorator","description":"Retry step until it succeeds.","seoTitle":"Automatically retry a task-runner pipeline step.","seoDescription":"Retry a pipeline step up to a configurable maximum retry count with a configurable sleep interval between retries.","keywords":null,"topics":["error handling","loops","pipeline format"],"categories":null,"date":"2020-07-13T13:37:06+01:00"},{"objectID":"https://pypyr.io/docs/decorators/swallow/","relLink":"/docs/decorators/swallow/","linkTitle":"swallow","title":"swallow decorator","description":"Swallow step error \u0026 continue with pipeline.","seoTitle":"Ignore or swallow a task-runner pipeline error.","seoDescription":"Swallow or catch exception on any pipeline step. This allows the pipeline to recover from error conditions.","keywords":null,"topics":["error handling","pipeline format"],"categories":null,"date":"2020-07-11T22:04:10+01:00"},{"objectID":"https://pypyr.io/docs/decorators/onerror/","relLink":"/docs/decorators/onerror/","linkTitle":"onError","title":"onError decorator","description":"Add custom error data on step error.","seoTitle":"Create custom exception object on task-runner pipeline failure.","seoDescription":"Add extra information to error if a pipeline step raises an exception.","keywords":null,"topics":["error handling","pipeline format"],"categories":null,"date":"2020-07-11T21:42:31+01:00"},{"objectID":"https://pypyr.io/docs/decorators/description/","relLink":"/docs/decorators/description/","linkTitle":"description","title":"description decorator","description":"Descriptive text that prints to output when step runs.","seoTitle":"Add text that prints to output when task-runner pipeline step runs.","seoDescription":"Pipeline authors can add text to print to output when a step runs. This is helpful to see pipeline progress.","keywords":null,"topics":["debug","print","pipeline format"],"categories":null,"date":"2020-07-11T20:35:07+01:00"},{"objectID":"https://pypyr.io/docs/decorators/comment/","relLink":"/docs/decorators/comment/","linkTitle":"comment","title":"comment decorator","description":"Annotations for pipeline authors.","seoTitle":"Add annotations or comments to task-runner pipeline steps.","seoDescription":"Pipeline authors can annotate task-runner pipeline steps with comments. These do not print to the output at runtime.","keywords":null,"topics":["pipeline format"],"categories":null,"date":"2020-07-11T20:13:51+01:00"},{"objectID":"https://pypyr.io/docs/steps/fileformattoml/","relLink":"/docs/steps/fileformattoml/","linkTitle":"fileformattoml","title":"pypyr.steps.fileformattoml","description":"Find \u0026 replace substitution {tokens} in a toml file.","seoTitle":"Format, find \u0026 replace tokens in toml files.","seoDescription":"Find \u0026 replace tokens in multiple toml files with correct data types. Like sed for toml, but type safe.","keywords":null,"topics":["filesystem","toml"],"categories":["steps"],"date":"2020-07-11T17:23:36+01:00"},{"objectID":"https://pypyr.io/docs/decorators/in/","relLink":"/docs/decorators/in/","linkTitle":"in","title":"in decorator","description":"Add arguments to context for the current step.","seoTitle":"Set input arguments for a task-runner step.","seoDescription":"Set input arguments for an individual pipeline step with a map/dict.","keywords":null,"topics":["context","pipeline format"],"categories":null,"date":"2020-07-11T12:56:32+01:00"},{"objectID":"https://pypyr.io/docs/decorators/foreach/","relLink":"/docs/decorators/foreach/","linkTitle":"foreach","title":"foreach loop decorator","description":"Repeat step for each item in list.","seoTitle":"Repeat task-runner step for each item in list.","seoDescription":"Repeat (loop) any pipeline step, or your own custom code step, for each item in the input list.","keywords":null,"topics":["control-of-flow","loops","pipeline format"],"categories":null,"date":"2020-07-10T19:07:51+01:00"},{"objectID":"https://pypyr.io/docs/contributing/","relLink":"/docs/contributing/","linkTitle":"contributing","title":"contributing","description":"pypyr is open-source. You don't have to write code to contribute, you can help with reporting bugs, documentation, examples and ideas. This guide will help you contribute to open-source software.","seoTitle":"How to contribute to pypyr open source software.","seoDescription":"pypyr is an open-source task-runner. This contribution guide will help you contribute to open-source software.","keywords":null,"topics":null,"categories":null,"date":"2020-07-09T17:42:16+01:00"},{"objectID":"https://pypyr.io/docs/context-parsers/yamlfile/","relLink":"/docs/context-parsers/yamlfile/","linkTitle":"yamlfile","title":"pypyr.parser.yamlfile","description":"Put yaml file into context from a cli arg path input.","seoTitle":"Pass values from yaml file to task-runner pipeline.","seoDescription":"Read a yaml file from disk \u0026 pass the strongly typed values to the pipeline's context. Use yaml file inside pipeline.","keywords":null,"topics":["args","filesystem","yaml"],"categories":["context parsers"],"date":"2020-07-09T17:42:16+01:00"},{"objectID":"https://pypyr.io/docs/context-parsers/string/","relLink":"/docs/context-parsers/string/","linkTitle":"string","title":"pypyr.parser.string","description":"Concatenate all cli input args into single string `argString`.","seoTitle":"Combine all cli input args into a single string","seoDescription":"Combine arbitrary cli input args into one string to use in the task-runner pipeline at run-time.","keywords":null,"topics":["args"],"categories":["context parsers"],"date":"2020-07-09T16:52:56+01:00"},{"objectID":"https://pypyr.io/docs/context-parsers/list/","relLink":"/docs/context-parsers/list/","linkTitle":"list","title":"pypyr.parser.list","description":"Put each cli input arg into a list `argList`.","seoTitle":"Create a list from cli args input to task-runner.","seoDescription":"Append each cli input argument into a list to initialize the pipeline context.","keywords":null,"topics":["args"],"categories":["context parsers"],"date":"2020-07-09T16:34:56+01:00"},{"objectID":"https://pypyr.io/docs/context-parsers/keyvaluepairs/","relLink":"/docs/context-parsers/keyvaluepairs/","linkTitle":"keyvaluepairs","title":"pypyr.parser.keyvaluepairs","description":"Pass key-value pairs from cli input args to the pipeline.","seoTitle":"Parsing key-value pairs from cli input arguments.","seoDescription":"Set key-value pairs as the task-runner cli input argument to use in the pipeline at run-time.","keywords":null,"topics":["args"],"categories":["context parsers"],"date":"2020-07-09T12:26:36+01:00"},{"objectID":"https://pypyr.io/docs/context-parsers/keys/","relLink":"/docs/context-parsers/keys/","linkTitle":"keys","title":"pypyr.parser.keys","description":"Boolean cli switches `True` if exist.","seoTitle":"Custom boolean switches for the task-runner cli.","seoDescription":"Parse existence check for cli arg switches as boolean True to use in a pipeline.","keywords":null,"topics":["args"],"categories":["context parsers"],"date":"2020-07-09T12:06:01+01:00"},{"objectID":"https://pypyr.io/docs/context-parsers/jsonfile/","relLink":"/docs/context-parsers/jsonfile/","linkTitle":"jsonfile","title":"pypyr.parser.jsonfile","description":"Put json file into context from a cli arg path input.","seoTitle":"Pass values from json file to task-runner pipeline.","seoDescription":"Read a json file from disk \u0026 pass the strongly typed values to the pipeline's context. Use json file inside pipeline.","keywords":null,"topics":["args","filesystem","json"],"categories":["context parsers"],"date":"2020-07-09T11:19:55+01:00"},{"objectID":"https://pypyr.io/docs/context-parsers/json/","relLink":"/docs/context-parsers/json/","linkTitle":"json","title":"pypyr.parser.json","description":"Put json input string from cli arg into context.","seoTitle":"Parse json string from the cli arg input to task-runner.","seoDescription":"Parse json string from the cli input argument \u0026 create a strongly typed dict object from those values.","keywords":null,"topics":["args","json"],"categories":["context parsers"],"date":"2020-07-08T19:18:15+01:00"},{"objectID":"https://pypyr.io/docs/context-parsers/dict/","relLink":"/docs/context-parsers/dict/","linkTitle":"dict","title":"pypyr.parser.dict","description":"Parse cli key=value pairs into `argDict`","seoTitle":"Create a dict from cli arg input to task-runner.","seoDescription":"Parse key=value pairs in a string from the cli input args \u0026 create a dict from those values.","keywords":null,"topics":["args"],"categories":["context parsers"],"date":"2020-07-08T18:44:23+01:00"},{"objectID":"https://pypyr.io/docs/steps/tar/","relLink":"/docs/steps/tar/","linkTitle":"tar","title":"pypyr.steps.tar","description":"Archive and/or extract tars with/without compression. Supports gzip, bzip2 \u0026 lzma.","seoTitle":"Archive, extract \u0026 compress tar files in pypyr task-runner.","seoDescription":"Archive, extract \u0026 compress tar files as a step in pypyr task-runner. Supports gzip, bzip2 \u0026 lzma.","keywords":null,"topics":null,"categories":["steps"],"date":"2020-07-07T17:42:21+01:00"},{"objectID":"https://pypyr.io/docs/steps/stopstepgroup/","relLink":"/docs/steps/stopstepgroup/","linkTitle":"stopstepgroup","title":"pypyr.steps.stopstepgroup","description":"Stop current step-group.","seoTitle":"Stop current step-group execution.","seoDescription":"Stop current step-group immediately, but proceed with the calling step-groups during task-runner execution.","keywords":null,"topics":["control-of-flow"],"categories":["steps"],"date":"2020-07-07T17:36:13+01:00"},{"objectID":"https://pypyr.io/docs/steps/stoppipeline/","relLink":"/docs/steps/stoppipeline/","linkTitle":"stoppipeline","title":"pypyr.steps.stoppipeline","description":"Stop current pipeline.","seoTitle":"Stop current pipeline execution.","seoDescription":"Stop current pipeline immediately, but proceed with the calling parent pipeline during task-runner execution.","keywords":null,"topics":["control-of-flow"],"categories":["steps"],"date":"2020-07-07T17:26:12+01:00"},{"objectID":"https://pypyr.io/docs/steps/stop/","relLink":"/docs/steps/stop/","linkTitle":"stop","title":"pypyr.steps.stop","description":"Stop pypyr entirely.","seoTitle":"Stop pypyr task-runner execution.","seoDescription":"Stop all pipeline processing immediately \u0026 exit task-runner.","keywords":null,"topics":["control-of-flow"],"categories":["steps"],"date":"2020-07-07T17:19:20+01:00"},{"objectID":"https://pypyr.io/docs/steps/shell/","relLink":"/docs/steps/shell/","linkTitle":"shell","title":"pypyr.steps.shell","description":"Run commands in the default shell. Use for pipes, wildcards, $ENVs, \\~","seoTitle":"Execute shell commands as a task in a pipeline step.","seoDescription":"Run shell commands using pipes, wildcards, environment variables and \\~ expansion for home in a task-runner pipeline.","keywords":null,"topics":["execute external program"],"categories":["steps"],"date":"2020-07-07T11:53:28+01:00"},{"objectID":"https://pypyr.io/docs/steps/safeshell/","relLink":"/docs/steps/safeshell/","linkTitle":"safeshell","title":"pypyr.steps.safeshell","description":"Deprecated alias for `cmd`","seoTitle":"Deprecated alias for cmd.","seoDescription":"Use pypyr.steps.cmd instead.","keywords":null,"topics":null,"categories":["steps"],"date":"2020-07-07T11:17:29+01:00"},{"objectID":"https://pypyr.io/docs/steps/nowutc/","relLink":"/docs/steps/nowutc/","linkTitle":"nowutc","title":"pypyr.steps.nowutc","description":"Saves current utc date-time to context `nowUtc`.","seoTitle":"Get UTC timestamp in pipeline.","seoDescription":"Get \u0026 format the current timestamp in UTC during task-runner pipeline execution.","keywords":null,"topics":["time"],"categories":["steps"],"date":"2020-07-07T10:19:23+01:00"},{"objectID":"https://pypyr.io/docs/steps/now/","relLink":"/docs/steps/now/","linkTitle":"now","title":"pypyr.steps.now","description":"Saves current local date-time to context `now`.","seoTitle":"Get local timestamp in pipeline.","seoDescription":"Get \u0026 format the current timestamp in local time (aka wall time) during task-runner pipeline execution.","keywords":null,"topics":["time"],"categories":["steps"],"date":"2020-07-07T10:14:55+01:00"},{"objectID":"https://pypyr.io/docs/steps/pypyrversion/","relLink":"/docs/steps/pypyrversion/","linkTitle":"pypyrversion","title":"pypyr.steps.pypyrversion","description":"Write current pypyr version number to output.","seoTitle":"Get the current pypyr version number.","seoDescription":"Output the currently installed pypyr version number.","keywords":null,"topics":null,"categories":["steps"],"date":"2020-07-07T10:10:38+01:00"},{"objectID":"https://pypyr.io/docs/steps/pype/","relLink":"/docs/steps/pype/","linkTitle":"pype","title":"pypyr.steps.pype","description":"Call another pipeline from the current pipeline.","seoTitle":"Call pipeline from running pipeline.","seoDescription":"Invoke another pipeline from the current pipeline, passing over dynamic arguments \u0026 values to the child pipeline.","keywords":null,"topics":["control-of-flow"],"categories":["steps"],"date":"2020-07-06T18:44:14+01:00"},{"objectID":"https://pypyr.io/docs/steps/py/","relLink":"/docs/steps/py/","linkTitle":"py","title":"pypyr.steps.py","description":"Execute inline python code.","seoTitle":"Execute inline python in pipeline.","seoDescription":"Run dynamic inline python inside a task-runner pipeline step.","keywords":null,"topics":["inline code"],"categories":["steps"],"date":"2020-07-06T13:17:22+01:00"},{"objectID":"https://pypyr.io/docs/steps/pathcheck/","relLink":"/docs/steps/pathcheck/","linkTitle":"pathcheck","title":"pypyr.steps.pathcheck","description":"Check if paths exist on filesystem.","seoTitle":"Check if paths exist on filesystem.","seoDescription":"Check and count if multiple files exist on filesystem in a task-runner pipeline. With glob support.","keywords":null,"topics":["filesystem","paths"],"categories":["steps"],"date":"2020-07-06T13:06:55+01:00"},{"objectID":"https://pypyr.io/docs/steps/jump/","relLink":"/docs/steps/jump/","linkTitle":"jump","title":"pypyr.steps.jump","description":"Jump to another step-group. The rest of the current step-group doesn't run.","seoTitle":"Jump to another step group in the same pipeline.","seoDescription":"Jump to another step-group in the same pipeline so that the rest of the current step-group does not run.","keywords":null,"topics":["control-of-flow"],"categories":["steps"],"date":"2020-07-06T12:43:39+01:00"},{"objectID":"https://pypyr.io/docs/steps/glob/","relLink":"/docs/steps/glob/","linkTitle":"glob","title":"pypyr.steps.glob","description":"Get paths from glob expression.","seoTitle":"Get all directories \u0026 files that match a glob.","seoDescription":"Get all existing paths that match a glob in a task-runner pipeline.","keywords":null,"topics":["filesystem","paths"],"categories":["steps"],"date":"2020-07-06T12:26:50+01:00"},{"objectID":"https://pypyr.io/docs/steps/filewriteyaml/","relLink":"/docs/steps/filewriteyaml/","linkTitle":"filewriteyaml","title":"pypyr.steps.filewriteyaml","description":"Write payload to file in yaml format.","seoTitle":"Write dynamic payload to yaml output file.","seoDescription":"Create a yaml file from any context input object with replacement token formatting in a task-runner pipeline.","keywords":null,"topics":["filesystem","yaml"],"categories":["steps"],"date":"2020-07-06T12:07:43+01:00"},{"objectID":"https://pypyr.io/docs/steps/filewritejson/","relLink":"/docs/steps/filewritejson/","linkTitle":"filewritejson","title":"pypyr.steps.filewritejson","description":"Write payload to file in json format.","seoTitle":"Write dynamic payload to json output file.","seoDescription":"Create a json file from any context input object with replacement token formatting in a task-runner pipeline.","keywords":null,"topics":["filesystem","json"],"categories":["steps"],"date":"2020-07-06T11:38:51+01:00"},{"objectID":"https://pypyr.io/docs/steps/filereplace/","relLink":"/docs/steps/filereplace/","linkTitle":"filereplace","title":"pypyr.steps.filereplace","description":"Find \u0026 replace any arbitrary search strings in a file.","seoTitle":"Find \u0026 replace any string in a file.","seoDescription":"Find \u0026 replace multiple arbitrary search strings in multiple files at the same time during a pipeline task-runner step.","keywords":null,"topics":["filesystem"],"categories":["steps"],"date":"2020-07-03T18:00:13+01:00"},{"objectID":"https://pypyr.io/docs/steps/fileformatyaml/","relLink":"/docs/steps/fileformatyaml/","linkTitle":"fileformatyaml","title":"pypyr.steps.fileformatyaml","description":"Find \u0026 replace substitution {tokens} in a yaml file.","seoTitle":"Format, find \u0026 replace tokens in yaml files.","seoDescription":"Find \u0026 replace tokens in multiple yaml files with correct data types. Like sed for yaml, but type safe.","keywords":null,"topics":["filesystem","yaml"],"categories":["steps"],"date":"2020-07-02T17:23:36+01:00"},{"objectID":"https://pypyr.io/docs/steps/fileformatjson/","relLink":"/docs/steps/fileformatjson/","linkTitle":"fileformatjson","title":"pypyr.steps.fileformatjson","description":"Find \u0026 replace substitution {tokens} in a json file.","seoTitle":"Format, find \u0026 replace tokens in json file.","seoDescription":"Find \u0026 replace tokens in multiple json files with correct data types. Like sed for json, but type safe.","keywords":null,"topics":["filesystem","json"],"categories":["steps"],"date":"2020-07-02T17:23:30+01:00"},{"objectID":"https://pypyr.io/docs/steps/fileformat/","relLink":"/docs/steps/fileformat/","linkTitle":"fileformat","title":"pypyr.steps.fileformat","description":"Find \u0026 replace substitution {tokens} in any file.","seoTitle":"Format, find \u0026 replace text file content.","seoDescription":"Find \u0026 replace tokens in a text file in a pipeline task-runner step.","keywords":null,"topics":["filesystem"],"categories":["steps"],"date":"2020-07-01T20:17:37+01:00"},{"objectID":"https://pypyr.io/docs/steps/fetchyaml/","relLink":"/docs/steps/fetchyaml/","linkTitle":"fetchyaml","title":"pypyr.steps.fetchyaml","description":"Load yaml file into pypyr context.","seoTitle":"Load yaml into task-runner pipeline context at run-time.","seoDescription":"Load \u0026 parse a yaml file into the task-runner so that the pipeline can read, manipulate \u0026 change the data.","keywords":null,"topics":["filesystem","yaml"],"categories":["steps"],"date":"2020-07-01T20:02:35+01:00"},{"objectID":"https://pypyr.io/docs/steps/fetchjson/","relLink":"/docs/steps/fetchjson/","linkTitle":"fetchjson","title":"pypyr.steps.fetchjson","description":"Load json file into pypyr context.","seoTitle":"Load json into task-runner pipeline context at run-time.","seoDescription":"Load \u0026 parse a json file into the task-runner so that the pipeline can read, manipulate \u0026 change the data.","keywords":null,"topics":["filesystem","json"],"categories":["steps"],"date":"2020-07-01T19:02:21+01:00"},{"objectID":"https://pypyr.io/docs/steps/envget/","relLink":"/docs/steps/envget/","linkTitle":"envget","title":"pypyr.steps.envget","description":"Get $ENVs \u0026 use a default fallback if they don't exist.","seoTitle":"Safely get environment variable into pipeline context.","seoDescription":"Get environment variable with safe existence check that doesn't throw an error into a task-runner pipeline context.","keywords":null,"topics":["environment variables"],"categories":["steps"],"date":"2020-07-01T17:19:44+01:00"},{"objectID":"https://pypyr.io/docs/steps/env/","relLink":"/docs/steps/env/","linkTitle":"env","title":"pypyr.steps.env","description":"Get, set or unset $ENVs.","seoTitle":"Get, set or unset environment variables in a task-runner pipeline.","seoDescription":"Get, set and unset environment variables in a pipeline workflow on a cross-platform task-runner.","keywords":null,"topics":["environment variables"],"categories":["steps"],"date":"2020-07-01T17:11:02+01:00"},{"objectID":"https://pypyr.io/docs/steps/default/","relLink":"/docs/steps/default/","linkTitle":"default","title":"pypyr.steps.default","description":"Set values if they do not exist already.","seoTitle":"Initialize the task-runner pipeline context with default values","seoDescription":"Assign default values to the pipeline context if those keys do not already have values.","keywords":null,"topics":["context"],"categories":["steps"],"date":"2020-07-01T12:22:55+01:00"},{"objectID":"https://pypyr.io/docs/steps/debug/","relLink":"/docs/steps/debug/","linkTitle":"debug","title":"pypyr.steps.debug","description":"Pretty print context to output.","seoTitle":"Debug task-runner pipelines by printing context values.","seoDescription":"Pretty print nested hierarchy to output to assist with troubleshooting and debugging.","keywords":null,"topics":["debug","print"],"categories":["steps"],"date":"2020-07-01T12:03:17+01:00"},{"objectID":"https://pypyr.io/docs/steps/contextsetf/","relLink":"/docs/steps/contextsetf/","linkTitle":"contextsetf","title":"pypyr.steps.contextsetf","description":"Old name for `set`. Use set instead.","seoTitle":"Set task-runner pipeline context values.","seoDescription":"Set pipeline context to static or dynamic values, read interactive user input from stdin \u0026 use formatting expressions.","keywords":null,"topics":["context"],"categories":["steps"],"date":"2020-06-30T20:28:46+01:00"},{"objectID":"https://pypyr.io/docs/steps/contextmerge/","relLink":"/docs/steps/contextmerge/","linkTitle":"contextmerge","title":"pypyr.steps.contextmerge","description":"Merges values into context, preserving the existing context hierarchy.","seoTitle":"Merge context \u0026 config properties in task-runner pipeline.","seoDescription":"Merge simple and complex types like lists and nested dictionaries in a task-runner pipeline.","keywords":null,"topics":["context"],"categories":["steps"],"date":"2020-06-30T19:51:26+01:00"},{"objectID":"https://pypyr.io/docs/steps/contextclearall/","relLink":"/docs/steps/contextclearall/","linkTitle":"contextclearall","title":"pypyr.steps.contextclearall","description":"Wipe the entire context.","seoTitle":"contextclearall to wipe the entire pipeline context","seoDescription":"Wipe or purge the entire task-runner pipeline context.","keywords":null,"topics":["context"],"categories":["steps"],"date":"2020-06-30T19:04:00+01:00"},{"objectID":"https://pypyr.io/docs/steps/contextclear/","relLink":"/docs/steps/contextclear/","linkTitle":"contextclear","title":"pypyr.steps.contextclear","description":"Remove specified items from context.","seoTitle":"Remove or delete items from the task-runner pipeline context.","seoDescription":"Remove or delete specified items from the task-runner pipeline context dictionary.","keywords":null,"topics":["context"],"categories":["steps"],"date":"2020-06-30T19:03:21+01:00"},{"objectID":"https://pypyr.io/docs/steps/cmd/","relLink":"/docs/steps/cmd/","linkTitle":"cmd","title":"pypyr.steps.cmd","description":"Run any external program, command, script.","seoTitle":"Execute any external program, command or script as a task in a pipeline step.","seoDescription":"Execute any external program, command or script as a task in a task-runner pipeline step.","keywords":null,"topics":["execute external program"],"categories":["steps"],"date":"2020-06-13T21:38:57+01:00"},{"objectID":"https://pypyr.io/docs/substitutions/format-string/","relLink":"/docs/substitutions/format-string/","linkTitle":"format string","title":"format string interpolation","description":"String interpolation with substitution tokens are for easy value replacement inside a pipeline workflow. Works with complex types, not just strings.","seoTitle":"Format string interpolation expressions in the pypyr task-runner.","seoDescription":"String interpolation with substitution tokens are for easy type-safe value replacement inside a pipeline workflow.","keywords":["token","replacement,","string","substitutions"],"topics":null,"categories":null,"date":"2020-06-13T21:38:57+01:00"},{"objectID":"https://pypyr.io/docs/substitutions/jsonify/","relLink":"/docs/substitutions/jsonify/","linkTitle":"jsonify","title":"jsonify","description":"Serialize context object to json string","seoTitle":"Serialize a context object to json in pypyr task-runner.","seoDescription":"Convert object structures like lists \u0026 dictionaries from yaml to a string of json.","keywords":["json,","serialize,","convert"],"topics":["json"],"categories":null,"date":"2020-06-13T21:38:57+01:00"},{"objectID":"https://pypyr.io/docs/substitutions/py-strings/","relLink":"/docs/substitutions/py-strings/","linkTitle":"py string","title":"py string - dynamic python expressions","description":"Evaluate dynamic python expressions in your pipeline steps and task automation sequences.","seoTitle":"Evaluate dynamic python expressions in pypyr task-runner.","seoDescription":"Evaluate \u0026 assign dynamic python expressions in any pypyr task-runner pipeline workflow.","keywords":["dynamic","expressions,","pipeline","execution"],"topics":["inline code"],"categories":null,"date":"2020-06-13T21:38:57+01:00"},{"objectID":"https://pypyr.io/docs/substitutions/sic-strings/","relLink":"/docs/substitutions/sic-strings/","linkTitle":"sic string","title":"sic string - literal strings","description":"Literal string values that should not have formatting expressions applied, for simplified escape sequences.","seoTitle":"Simplify escape sequences with literal strings.","seoDescription":"Literal string values ignore formatting expressions in your pipeline steps \u0026 task automation sequences.","keywords":["literal","strings,","pipeline","execution"],"topics":null,"categories":null,"date":"2020-06-13T21:38:57+01:00"},{"objectID":"https://pypyr.io/updates/releases/v3.2.1/","relLink":"/updates/releases/v3.2.1/","linkTitle":"release v3.2.1","title":"release v3.2.1","description":"Support non-string keys in context on Formatting \u0026 Merge","seoTitle":"pypyr release v3.2.1","seoDescription":null,"keywords":null,"topics":null,"categories":null,"date":"2020-04-14T02:20:27Z"},{"objectID":"https://pypyr.io/updates/releases/v3.2.0/","relLink":"/updates/releases/v3.2.0/","linkTitle":"release v3.2.0","title":"release v3.2.0","description":"nested call inside loops \u0026 in context clearing preview","seoTitle":"pypyr release v3.2.0","seoDescription":null,"keywords":null,"topics":null,"categories":null,"date":"2020-04-04T13:33:40Z"},{"objectID":"https://pypyr.io/updates/releases/v3.1.0/","relLink":"/updates/releases/v3.1.0/","linkTitle":"release v3.1.0","title":"release v3.1.0","description":"API change to main entrypoint for logging","seoTitle":"pypyr release v3.1.0","seoDescription":null,"keywords":null,"topics":null,"categories":null,"date":"2020-02-11T19:24:11Z"},{"objectID":"https://pypyr.io/updates/releases/v3.0.3/","relLink":"/updates/releases/v3.0.3/","linkTitle":"release v3.0.3","title":"release v3.0.3","description":"Retry Decorator handles original errors when calling Groups ","seoTitle":"pypyr release v3.0.3","seoDescription":null,"keywords":null,"topics":null,"categories":null,"date":"2020-01-29T01:03:12Z"},{"objectID":"https://pypyr.io/updates/releases/v3.0.2/","relLink":"/updates/releases/v3.0.2/","linkTitle":"release v3.0.2","title":"release v3.0.2","description":"Better error messages on failing import modules","seoTitle":"pypyr release v3.0.2","seoDescription":null,"keywords":null,"topics":null,"categories":null,"date":"2019-11-18T19:30:27Z"},{"objectID":"https://pypyr.io/updates/releases/v3.0.1/","relLink":"/updates/releases/v3.0.1/","linkTitle":"release v3.0.1","title":"release v3.0.1","description":"pypyr.steps.debug \u0026 context merge support all types","seoTitle":"pypyr release v3.0.1","seoDescription":null,"keywords":null,"topics":null,"categories":null,"date":"2019-09-13T20:11:13Z"},{"objectID":"https://pypyr.io/updates/releases/v3.0.0/","relLink":"/updates/releases/v3.0.0/","linkTitle":"release v3.0.0","title":"release v3.0.0","description":"Major version, with BREAKING CHANGES: features custom step groups, caching \u0026 no more ./pipelines dir","seoTitle":"pypyr release v3.0.0","seoDescription":null,"keywords":null,"topics":null,"categories":null,"date":"2019-08-22T17:47:35Z"},{"objectID":"https://pypyr.io/updates/releases/v2.11.0/","relLink":"/updates/releases/v2.11.0/","linkTitle":"release v2.11.0","title":"release v2.11.0","description":"less confusing logging with NOTIFY","seoTitle":"pypyr release v2.11.0","seoDescription":null,"keywords":null,"topics":null,"categories":null,"date":"2019-08-06T21:16:03Z"},{"objectID":"https://pypyr.io/updates/releases/v2.10.0/","relLink":"/updates/releases/v2.10.0/","linkTitle":"release v2.10.0","title":"release v2.10.0","description":"Better Errors - line numbers, save errors","seoTitle":"pypyr release v2.10.0","seoDescription":null,"keywords":null,"topics":null,"categories":null,"date":"2019-07-10T08:48:32Z"},{"objectID":"https://pypyr.io/updates/releases/v2.9.0/","relLink":"/updates/releases/v2.9.0/","linkTitle":"release v2.9.0","title":"release v2.9.0","description":"glob step and special tag merge","seoTitle":"pypyr release v2.9.0","seoDescription":null,"keywords":null,"topics":null,"categories":null,"date":"2019-06-14T18:51:28Z"},{"objectID":"https://pypyr.io/updates/releases/v2.8.0/","relLink":"/updates/releases/v2.8.0/","linkTitle":"release v2.8.0","title":"release v2.8.0","description":"Retry Decorator and until-style While Loops","seoTitle":"pypyr release v2.8.0","seoDescription":null,"keywords":null,"topics":null,"categories":null,"date":"2019-03-24T01:22:01Z"},{"objectID":"https://pypyr.io/updates/releases/v2.7.0/","relLink":"/updates/releases/v2.7.0/","linkTitle":"release v2.7.0","title":"release v2.7.0","description":"pypyr.steps.pype inputs now support string interpolation","seoTitle":"pypyr release v2.7.0","seoDescription":null,"keywords":null,"topics":null,"categories":null,"date":"2019-03-21T15:09:21Z"},{"objectID":"https://pypyr.io/updates/releases/v2.6.0/","relLink":"/updates/releases/v2.6.0/","linkTitle":"release v2.6.0","title":"release v2.6.0","description":"pypyr.steps.now and pypyr.steps.nowutc","seoTitle":"pypyr release v2.6.0","seoDescription":null,"keywords":null,"topics":null,"categories":null,"date":"2019-02-08T16:20:23Z"},{"objectID":"https://pypyr.io/updates/releases/v2.5.0/","relLink":"/updates/releases/v2.5.0/","linkTitle":"release v2.5.0","title":"release v2.5.0","description":"change the current working directory for cmd and shell","seoTitle":"pypyr release v2.5.0","seoDescription":null,"keywords":null,"topics":null,"categories":null,"date":"2019-01-30T19:08:54Z"},{"objectID":"https://pypyr.io/updates/releases/v2.4.0/","relLink":"/updates/releases/v2.4.0/","linkTitle":"release v2.4.0","title":"release v2.4.0","description":"pypyr.steps.pathcheck \u0026 deprecation of old style fetchjson/fetchyaml args","seoTitle":"pypyr release v2.4.0","seoDescription":null,"keywords":null,"topics":null,"categories":null,"date":"2019-01-24T23:04:20Z"},{"objectID":"https://pypyr.io/updates/releases/v2.3.0/","relLink":"/updates/releases/v2.3.0/","linkTitle":"release v2.3.0","title":"release v2.3.0","description":"pypyr.steps.getenv","seoTitle":"pypyr release v2.3.0","seoDescription":null,"keywords":null,"topics":null,"categories":null,"date":"2019-01-24T02:18:47Z"},{"objectID":"https://pypyr.io/updates/releases/v2.2.0/","relLink":"/updates/releases/v2.2.0/","linkTitle":"release v2.2.0","title":"release v2.2.0","description":"Dynamic pype loading and KeyNotInContextError == KeyError","seoTitle":"pypyr release v2.2.0","seoDescription":null,"keywords":null,"topics":null,"categories":null,"date":"2019-01-18T10:34:45Z"},{"objectID":"https://pypyr.io/updates/releases/v2.1.1/","relLink":"/updates/releases/v2.1.1/","linkTitle":"release v2.1.1","title":"release v2.1.1","description":"Write step description to logger INFO on step execution","seoTitle":"pypyr release v2.1.1","seoDescription":null,"keywords":null,"topics":null,"categories":null,"date":"2019-01-04T11:32:19Z"},{"objectID":"https://pypyr.io/updates/releases/v2.1.0/","relLink":"/updates/releases/v2.1.0/","linkTitle":"release v2.1.0","title":"release v2.1.0","description":"globs, save cmd out, backwards compatible context change for multi-key steps","seoTitle":"pypyr release v2.1.0","seoDescription":null,"keywords":null,"topics":null,"categories":null,"date":"2019-01-03T00:55:09Z"},{"objectID":"https://pypyr.io/updates/releases/v2.0.0/","relLink":"/updates/releases/v2.0.0/","linkTitle":"release v2.0.0","title":"release v2.0.0","description":"Sic Strings, Py Strings, Fetch into Key and file write yaml/json","seoTitle":"pypyr release v2.0.0","seoDescription":null,"keywords":null,"topics":null,"categories":null,"date":"2018-12-16T20:19:49Z"},{"objectID":"https://pypyr.io/updates/releases/v1.2.1/","relLink":"/updates/releases/v1.2.1/","linkTitle":"release v1.2.1","title":"release v1.2.1","description":"no functional change: fix pype bug","seoTitle":"pypyr release v1.2.1","seoDescription":null,"keywords":null,"topics":null,"categories":null,"date":"2018-11-05T11:07:17Z"},{"objectID":"https://pypyr.io/updates/releases/v1.2.0/","relLink":"/updates/releases/v1.2.0/","linkTitle":"release v1.2.0","title":"release v1.2.0","description":"no functional change: api update","seoTitle":"pypyr release v1.2.0","seoDescription":null,"keywords":null,"topics":null,"categories":null,"date":"2018-11-05T09:26:15Z"},{"objectID":"https://pypyr.io/updates/releases/v1.1.1/","relLink":"/updates/releases/v1.1.1/","linkTitle":"release v1.1.1","title":"release v1.1.1","description":"no functional change","seoTitle":"pypyr release v1.1.1","seoDescription":null,"keywords":null,"topics":null,"categories":null,"date":"2018-10-18T22:43:18Z"},{"objectID":"https://pypyr.io/updates/releases/v1.1.0/","relLink":"/updates/releases/v1.1.0/","linkTitle":"release v1.1.0","title":"release v1.1.0","description":"cli: --logpath + py 3.7","seoTitle":"pypyr release v1.1.0","seoDescription":null,"keywords":null,"topics":null,"categories":null,"date":"2018-10-18T22:01:10Z"},{"objectID":"https://pypyr.io/updates/releases/v1.0.0/","relLink":"/updates/releases/v1.0.0/","linkTitle":"release v1.0.0","title":"release v1.0.0","description":"step decorator: while","seoTitle":"pypyr release v1.0.0","seoDescription":null,"keywords":null,"topics":null,"categories":null,"date":"2018-07-26T20:17:17Z"},{"objectID":"https://pypyr.io/categories/","relLink":"/categories/","linkTitle":"categories","title":"categories","description":"Browse pypyr technical documentation by category.","seoTitle":"pypyr technical documentation categories.","seoDescription":"Browse pypyr technical documentation by category.","keywords":null,"topics":null,"categories":null,"date":null},{"objectID":"https://pypyr.io/docs/loaders/","relLink":"/docs/loaders/","linkTitle":"loaders","title":"loaders","description":"Loaders discover and load your pipelines.","seoTitle":"Load pipelines into pypyr task-runner.","seoDescription":"Use loaders to discover and load pipelines into your pipeline task-runner.","keywords":null,"topics":null,"categories":null,"date":null},{"objectID":"https://pypyr.io/topics/lookup-order/","relLink":"/topics/lookup-order/","linkTitle":"lookup order","title":"lookup order","description":"This is how pypyr resolves pipeline names and the order in which it searches various folders to find the matching pipeline.","seoTitle":"pypyr's pipeline name resolution","seoDescription":"The look-up order to find pipelines based on pipeline names.","keywords":null,"topics":null,"categories":null,"date":null},{"objectID":"https://pypyr.io/updates/news/","relLink":"/updates/news/","linkTitle":"news","title":"news","description":"pypyr news \u0026 announcements.","seoTitle":null,"seoDescription":null,"keywords":null,"topics":null,"categories":null,"date":null},{"objectID":"https://pypyr.io/docs/pipelines/","relLink":"/docs/pipelines/","linkTitle":"pipelines","title":"pipelines","description":"Pipelines are sequences of steps that you define in a simple yaml file.","seoTitle":"pypyr is a task-runner that runs pipelines defined in yaml.","seoDescription":"Overview of pypyr's pipeline format, pipeline lookup order \u0026 built-in pipelines.","keywords":null,"topics":null,"categories":null,"date":null},{"objectID":"https://pypyr.io/updates/releases/pypyr-aws/","relLink":"/updates/releases/pypyr-aws/","linkTitle":"pypyr-aws","title":"pypyr-aws releases","description":"Latest version of pypyraws, release notes, new releases \u0026 release history.","seoTitle":null,"seoDescription":null,"keywords":null,"topics":null,"categories":null,"date":null},{"objectID":"https://pypyr.io/updates/releases/pypyr-slack/","relLink":"/updates/releases/pypyr-slack/","linkTitle":"pypyr-slack","title":"pypyr-slack releases","description":"Latest version of pypyrslack, release notes, new releases \u0026 release history.","seoTitle":null,"seoDescription":null,"keywords":null,"topics":null,"categories":null,"date":null},{"objectID":"https://pypyr.io/updates/releases/","relLink":"/updates/releases/","linkTitle":"releases","title":"releases","description":"Latest version of pypyr, release notes, new releases \u0026 release history.","seoTitle":null,"seoDescription":null,"keywords":null,"topics":null,"categories":null,"date":null},{"objectID":"https://pypyr.io/topics/","relLink":"/topics/","linkTitle":"topics","title":"topics","description":"Browse pypyr pipeline runner technical documentation by Topic.","seoTitle":null,"seoDescription":null,"keywords":null,"topics":null,"categories":null,"date":null},{"objectID":"https://pypyr.io/updates/","relLink":"/updates/","linkTitle":"updates","title":"all updates","description":"pypyr news, releases \u0026 updates.","seoTitle":null,"seoDescription":null,"keywords":null,"topics":null,"categories":null,"date":null}]
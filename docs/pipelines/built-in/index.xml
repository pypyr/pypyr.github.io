<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>built-in pipelines on pypyr</title><link>https://pypyr.io/docs/pipelines/built-in/</link><description>Recent content in built-in pipelines on pypyr</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Wed, 05 Oct 2022 19:26:21 +0100</lastBuildDate><atom:link href="https://pypyr.io/docs/pipelines/built-in/index.xml" rel="self" type="application/rss+xml"/><item><title>venv-create built-in pipeline</title><link>https://pypyr.io/docs/pipelines/built-in/venv-create/</link><pubDate>Wed, 05 Oct 2022 14:16:54 +0100</pubDate><guid>https://pypyr.io/docs/pipelines/built-in/venv-create/</guid><description>venv-create permalinkCreate virtual environments from a yaml or toml config file and install extra dependencies. To speed things up, the pipeline creates multiple venvs concurrently in parallel.
This pipeline uses the pypyr.steps.venv step under the covers, so check the step&amp;rsquo;s documentation for further detail on the config inputs.
This pipeline creates Python stdlib virtual environments (venv) from declarative config without writing any script yourself. The underlying mechanism is pretty much the equivalent of $ python -m venv my-dir.</description></item><item><title>config-show built-in pipeline</title><link>https://pypyr.io/docs/pipelines/built-in/config-show/</link><pubDate>Wed, 05 Oct 2022 14:11:11 +0100</pubDate><guid>https://pypyr.io/docs/pipelines/built-in/config-show/</guid><description>config-show permalinkShow pypyr&amp;rsquo;s current configuration settings and sources. This is useful to troubleshoot your configuration settings.
Run me like this:
$ pypyr config-show See troubleshooting config for details.</description></item><item><title>echo built-in pipeline</title><link>https://pypyr.io/docs/pipelines/built-in/echo/</link><pubDate>Wed, 05 Oct 2022 14:07:42 +0100</pubDate><guid>https://pypyr.io/docs/pipelines/built-in/echo/</guid><description> echo permalinkEchoes input args to output.
Run me like this:
$ pypyr echo hello there! hello there!</description></item><item><title>pypyrversion built-in pipeline</title><link>https://pypyr.io/docs/pipelines/built-in/pypyrversion/</link><pubDate>Wed, 05 Oct 2022 14:07:29 +0100</pubDate><guid>https://pypyr.io/docs/pipelines/built-in/pypyrversion/</guid><description> pypyrversion permalinkPrint the pypyr &amp;amp; current Python version numbers to stdout.
Run me like this:
$ pypyr pypyrversion pypyr 5.6.0 python 3.10.6 The pipeline uses pypyr.steps.pypyrversion under the hood.
Running this pipeline does the same thing as the cli --version switch:
$ pypyr --version</description></item><item><title>magritte built-in pipeline</title><link>https://pypyr.io/docs/pipelines/built-in/magritte/</link><pubDate>Wed, 05 Oct 2022 14:05:19 +0100</pubDate><guid>https://pypyr.io/docs/pipelines/built-in/magritte/</guid><description>magritte permalinkVery serious ontological statement about pipes.
Run me like this:
$ pypyr magritte Deep Lore: I tend to use this as a quick smoke test to verify pypyr installed as expected. If this seemingly silly pipeline works, you know pypyr can run, find pipelines and that built-ins installed as expected.</description></item></channel></rss>